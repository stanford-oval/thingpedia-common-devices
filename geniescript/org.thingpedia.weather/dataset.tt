// Copyright 2016 Andrei Bajenov, Darshan Kapashi
//           2016-2020 The Board of Trustees of the Leland Stanford Junior University
//
// Redistribution and use in source and binary forms, with or
// without modification, are permitted provided that the following
// conditions are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above
//    copyright notice, this list of conditions and the following
//    disclaimer in the documentation and/or other materials
//    provided with the distribution.
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
// OF THE POSSIBILITY OF SUCH DAMAGE.

dataset @org.thingpedia.weather language "en" {
    query () := [temperature] of @org.thingpedia.weather.current()
    #_[utterances=["the temperature outside", "the weather temperature"]]
    #[name="TemperatureOfWeather"];

    query (p_location :Location) := [temperature] of @org.thingpedia.weather.current(location=p_location)
    #_[utterances=["the temperature in ${p_location}"]]
    #[name="TemperatureOfWeatherWithLocation"];

    query (p_location :Location) := [humidity] of @org.thingpedia.weather.current(location=p_location)
    #_[utterances=["the humidity in ${p_location}"]]
    #[name="HumidityOfWeatherWithLocation"];

    query (p_location :Location, p_date :Date) := [temperature] of @org.thingpedia.weather.forecast(location=p_location, date=p_date)
    #_[utterances=["the temperature in ${p_location} on ${p_date}"]]
    #[name="TemperatureOfWeatherForecastWithLocation"];

    query (p_location :Location, p_date :Date) := [humidity] of @org.thingpedia.weather.forecast(location=p_location, date=p_date)
    #_[utterances=["the humidity in ${p_location} on ${p_date}"]]
    #[name="HumidityOfWeatherForecastWithLocation"];

    query (p_date :Date) := @org.thingpedia.weather.forecast(date=p_date)
    #_[utterances=["the weather on ${p_date}"]]
    #[name="WeatherForecastWithTime"];

    query () := @org.thingpedia.weather.forecast(date=$end_of(day))
    #_[utterances=["the weather tomorrow"]]
    #[name="WeatherForecastWithTimeTomorrow"];

    query () := [humidity] of @org.thingpedia.weather.current()
    #_[utterances=["the humidity outside"]]
    #[name="HumidityOfWeather"];

    query () := [wind_speed] of @org.thingpedia.weather.current()
    #_[utterances=["the wind speed outside"]]
    #[name="WindSpeedOfWeather"];

    stream (p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), temperature <= 0C
    #_[utterances=["when the temperature in $p_location is below freezing"]]
    #[id=53258809]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByTemperatureLessThan2"];

    stream (p_humidity :Number, p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), humidity <= p_humidity
    #_[utterances=["when the humidity in $p_location is below $p_humidity"]]
    #[id=53258812]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByHumidityLessThan"];

    stream (p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), status == enum(raining)
    #_[utterances=["when it starts raining in $p_location"]]
    #[id=53258813]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByStatusRaining"];

    stream (p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), status == enum(snowy)
    #_[utterances=["when it starts snowing in $p_location"]]
    #[id=53258814]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByStatusSnowy"];

    stream (p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), !(status == enum(raining))
    #_[utterances=["when it stops raining in $p_location"]]
    #[id=53258815]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationNotByStatusRaining"];

    stream (p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), !(status == enum(snowy))
    #_[utterances=["when it stops snowing in $p_location"]]
    #[id=53258816]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationNotByStatusSnowy"];

    stream (p_wind_speed :Measure(mps), p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), wind_speed >= p_wind_speed
    #_[utterances=["when the wind speed in $p_location is above $p_wind_speed"]]
    #[id=53258817]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByWindSpeedGreaterThan"];

    stream (p_status :Enum(raining,cloudy,sunny,snowy,sleety,drizzling,windy,foggy), p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), status == p_status
    #_[utterances=["when it's $p_status at location $p_location",
                   "when it becomes $p_status at $p_location"]]
    #[id=53266921]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByStatus"];

    stream (p_temperature :Measure(C), p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), temperature >= p_temperature
    #_[utterances=["when the temperature in $p_location is above $p_temperature",
                   "when it 's hotter than $p_temperature in $p_location"]]
    #[id=53266931]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByTemperatureGreaterThan"];

    stream (p_temperature :Measure(C), p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), temperature <= p_temperature
    #_[utterances=["when the temperature in $p_location is below $p_temperature",
                   "when it 's colder than $p_temperature in $p_location"]]
    #[id=53266933]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByTemperatureLessThan"];

    stream (p_temperature :Measure(C)) := monitor (@org.thingpedia.weather.current()), temperature >= p_temperature
    #_[utterances=["when the temperature outside is above $p_temperature",
                   "when it 's hotter outside than $p_temperature"]]
    #[id=53266935]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByTemperatureGreaterThan1"];

    stream (p_temperature :Measure(C)) := monitor (@org.thingpedia.weather.current()), temperature <= p_temperature
    #_[utterances=["when the temperature outside is below $p_temperature",
                   "when it 's colder outside than $p_temperature"]]
    #[id=53266937]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByTemperatureLessThan1"];

    stream (p_humidity :Number, p_location :Location) := monitor (@org.thingpedia.weather.current(location=p_location)), humidity >= p_humidity
    #_[utterances=["when the humidity in $p_location is above $p_humidity",
                   "when it is more humid than $p_humidity in $p_location"]]
    #[id=53266939]
    #[name="MonitorGetCurrentWeatherOnWeatherapiWithLocationByHumidityGreaterThan"];

    /*stream := monitor (@org.thingpedia.weather.sunrise()), sunset == true
    #_[utterances=["when sun goes down",
                   "after sunset",
                   "when sunset",
                   "when sun sets"]]
    #[id=53266945]
    #[name="MonitorGetSunriseOnWeatherapiWithLocationBySunset"];

    stream := monitor (@org.thingpedia.weather.sunrise()), sunrisen == true
    #_[utterances=["when sun comes up",
                   "after sunrise",
                   "when sunrise",
                   "when sun rises"]]
    #[id=53266949]
    #[name="MonitorGetSunriseOnWeatherapiWithLocationBySunrisen"];
    */
}
