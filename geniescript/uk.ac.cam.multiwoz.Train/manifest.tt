class @uk.ac.cam.multiwoz.Train
#_[name="Cambridge Train"]
#_[description="Fake data used by MultiWOZ"]
#_[canonical="cambridge train"]
{
  import loader from @org.thingpedia.v2();
  import config from @org.thingpedia.config.none();

  entity Place #_[name="Place"] #[has_ner=true];
  entity Train #_[name="Train"] #[has_ner=true];

  list query Train(out id : Entity(uk.ac.cam.multiwoz.Train:Train)
                   #[conflict_filter=['arrive_by', 'leave_at']]
                   #[unique=true]
                   #[string_values="uk.ac.cam.multiwoz.Train:id"]
                   #_[canonical={
                     base=["id", "train number", "number", "name"],
                     passive_verb=["id #", "train number #"]
                   }],
                   out destination : Entity(uk.ac.cam.multiwoz.Train:Place)
                   #[string_values="uk.ac.cam.multiwoz.Train:destination"]
                   #_[prompt=["what is your destination", "where to",
                      "where will you be heading", "where will you be travelling to"]]
                   #_[canonical={
                     default="preposition",
                     base=["destination", "destination station", "arrival"],
                     property=["destination #", "destination station #", "arrival #"],
                     preposition=["to #"],
                     verb=["arrives at #", "should arrive at #", "arrives to #"],
                     passive_verb=["headed towards #", "arriving to #", "arriving in #", "arriving at #",
                       "going to #", "going into #"],
                     projection_pronoun=["where"],
                     verb_projection=["head to", "arrive to", "arrive at", "go to"]
                   }],
                   out departure : Entity(uk.ac.cam.multiwoz.Train:Place)
                   #[string_values="uk.ac.cam.multiwoz.Train:departure"]
                   #_[prompt=["where will you be departing from",
                     "where will you be leaving from", "where are you travelling from"]]
                   #_[canonical={
                     default="preposition",
                     base=["departure", "departure station"],
                     property=["departure #", "departure station #"],
                     preposition=["from #"],
                     verb=["departs from #", "should depart from #", "departs at #"],
                     passive_verb=["leaving #", "leaving from #", "departing from #"],
                     projection_pronoun=["where"],
                     verb_projection=["leave from", "depart from"]
                   }],
                   out day : Enum(friday, wednesday, monday, saturday, thursday, tuesday, sunday)
                   #[conflict_filter=['id']]
                   #_[prompt=["when are you travelling", "what day are you travelling"]]
                   #_[canonical={
                     default="preposition",
                     base=["day", "date"],
                     adjective=["#"],
                     preposition=["on #", "#"],
                     passive_verb=["leaving on #", "travelling on #"]
                   }],
                   out arrive_by : Time
                   #[conflict_filter=['leave_at', 'id']]
                   #[slot_operator="<="]
                   #_[prompt=["when do you want to arrive", "by when do you want to arrive"]]
                   #_[canonical={
                     default="passive_verb",
                     base=["arrival time"],
                     verb=["arrives at #", "arrives by #", "arrives before #"],
                     passive_verb=["arriving at #", "arriving by #", "arriving before #"],
                     projection_pronoun=["when"],
                     verb_projection=["arrive"]
                   }],
                   out leave_at : Time
                   #[conflict_filter=['arrive_by', 'id']]
                   #[slot_operator=">="]
                   #_[prompt=["when do you want to leave", "when do you want to travel"]]
                   #_[canonical={
                     default="passive_verb",
                     base=["time", "departure time"],
                     preposition=["at #", "after #"],
                     verb=["leaves at #", "leaves after #"],
                     passive_verb=["leaving at #", "leaving after #"],
                     projection_pronoun=["when"],
                     verb_projection=["leave", "depart"]
                   }],
                   out price : Currency
                   #[filterable=false]
                   #_[canonical={
                     default="base",
                     base=["cost", "price", "fare", "fare price", "ticket price", "ticket cost"],
                     projection_pronoun=["how much"],
                     verb_projection=["cost"]
                   }],
                   out duration : Measure(ms)
                   #[filterable=false]
                   #_[question=["how long does it take", "how long is the ride", "how long will i be travelling"]]
                   #_[canonical={
                     default="base",
                     base=["duration", "length", "travel time"],
                     projection_pronoun=["how long"],
                     verb_projection=["take"]
                   }]
                   )
  #[minimal_projection=["id"]]
  #_[canonical=["train", "train ticket", "train ride", "ticket for a train"]]
  #_[confirmation="train"]
  #[confirm=false];

  action make_booking(in req train : Entity(uk.ac.cam.multiwoz.Train:Train)
                      #[string_values="uk.ac.cam.multiwoz.Train:id"]
                      #_[prompt="what train would you like to book?"],

                      in opt book_people : Number
                      #[min_number=1]
                      #[max_number=15]
                      #_[prompt=["for how many people", "how many people will be traveling",
                        "how many people are travelling", "how many tickets do you need"]]
                      #_[canonical={
                        default="preposition",
                        base=["people"],
                        preposition=["for # people"]
                      }],
                      out reference_number : String
                      #_[canonical={
                        default="base",
                        base=["reference number", "confirmation number"]
                      }])
  #_[confirmation="make a booking for train ${train}"]
  // multiwoz people don't ask for a confirmation before doing the booking...
  #[confirm=false]
  #_[on_error={
     no_slot_available=["there are no seats available on ${train}"]
  }];
}
