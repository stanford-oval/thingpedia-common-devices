====
# log/18538
U: hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/21354
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/124578
U: hi almond
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/136776
U: thank you
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/139232
U: hola
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/136440
U: hello!
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/134781
U: ciao
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/17951
U: thx
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/120219
U: hello almond
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/51709
U: hello there
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/100979
U: good morning
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/678
U: hello almond!
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/12442
U: hi@there
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/103116
U: nevermind
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/108529
U: thank you :-)
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/55548
U: hellow
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/17693
U: hey almond
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/60901
U: hello hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/134904
U: ehy ada
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/88521
U: hii
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/7715
U: hi!
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/6784
U: hello?
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/6217
U: thanks!
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/44467
U: howdy
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/1403
U: helo
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/20861
U: cancel.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/50614
U: hey!
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/200
U: hello.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log/52911
U: quit
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/69927
U: can you hear me?
UT: $dialogue @org.thingpedia.dialogue.transaction.hello;
====
# log/10883
U: can you hear me
UT: $dialogue @org.thingpedia.dialogue.transaction.hello;
====
# log/9808
U: exit
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7265
U: hi.
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/07ff12322b2e50b19883b77d0484e5ce
U: yo
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/95f495c777495528f934a4151ffbfcaf
U: hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello, how can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello! What can I do for you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: hello
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/4aef4e1190ceb0c4294272b2bbae4da9
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/8c0a0508a23c5fa801173da61b494e24
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/7844
U: thank you.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7809
U: no thanks
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7808
U: never mind then.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7686
U: bye.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log-dev/7464
U: well, bye.
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/0a39bc3326851c0dc124dfc99d1a313d
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hi! What can I do for you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hi, how can I help you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello, what can I do for you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/70f9e38f567391dc05ef31a41047f726
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/158401
U: hello almon
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/e73806f00406cd54c8d2e081d52e4372
U: what is the sunset time
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.sunrise();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.sunrise(location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { location=new Location(37.4863239, -122.232523, "Redwood City, California"), date=new Date("2021-02-25T23:22:49.456Z"), sunrise_time=new Time(14, 44, 55), sunset_time=new Time(1, 58, 7), sunrisen=true, sunset=true }
C: ]];
A: In Redwood City, California, the sun rises at 6:44:55 AM and sets at 5:58:07 PM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: shuffle songs
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_shuffle(shuffle=enum on);
====
# recording/75a86ccce499476e1fd9b0898ec06e5f
U: get a random number greater than 7
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
A: 8.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
A: 11.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: again
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
A: 8.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: get a random number greater than 100
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
A: 164.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
A: 118.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=156, low=100 }
C: ]];
A: 156.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=156, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=163, low=100 }
C: ]];
A: 163.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: another one
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=156, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=163, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=147, low=100 }
C: ]];
A: 147.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather in neverland
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("neverland"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=11, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=7)
C: #[results=[
C:   { random=8, low=7 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=164, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=118, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=156, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=163, low=100 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between(low=100)
C: #[results=[
C:   { random=147, low=100 }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(36.5483056, -121.9197466, "Neverland"))
C: #[results=[
C:   { temperature=12.5C, wind_speed=1.3mps, humidity=58.2, cloudiness=59.4, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(36.5483056, -121.9197466, "Neverland") }
C: ]];
A: The current weather in Neverland is cloudy. The temperature is 54.5 F and the humidity is 58.2 %.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather in xjehfmhhejdndne
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("xjehfmhhejdndne"));
====
# recording/69055b1c35eb9a033f2df5501a4c553a
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="0oO71TSv4Ed"^^com.icanhazdadjoke:id, text="Why was it called the dark ages? Because of all the knights. " }
C: ]];
A: Why was it called the dark ages? Because of all the knights.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: play a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() => @org.thingpedia.media-player.play(playable=id);
====
# recording/e4c994091786a99c7d25936175d3b0b7
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="4EBsPZvP7h"^^com.icanhazdadjoke:id, text="Some people eat light bulbs. They say it's a nice light snack." }
C: ]];
A: Some people eat light bulbs. They say it's a nice light snack.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/1be8b61f4de01ff843227f6600b9fe09
U: Find me a top chinese restaurant
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, null^^com.yelp:restaurant_cuisine("chinese")))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [genres] of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).artist() filter id =~ "queen"
C: #[results=[
C:   { id="spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^org.thingpedia.media-source:artist("Queen"), genres=["classic rock", "glam rock", "rock"] },
C:   { id="spotify:artist:4pejUc4iciQfgdX6OKulQn"^^org.thingpedia.media-source:artist("Queens of the Stone Age"), genres=["alternative metal", "alternative rock", "blues rock", "modern rock", "nu metal", "palm desert scene", "rock", "stoner metal", "stoner rock"] },
C:   { id="spotify:artist:3nViOFa3kZW8OMSNOzwr98"^^org.thingpedia.media-source:artist("Queen Naija"), genres=["dance pop", "pop", "pop r&b", "r&b", "urban contemporary"] },
C:   { id="spotify:artist:6p2442ymrT9lZEuCZJdYcH"^^org.thingpedia.media-source:artist("Ivy Queen"), genres=["latin", "latin hip hop", "rap latina", "reggaeton", "trap latino", "tropical"] },
C:   { id="spotify:artist:0VbIlorLz3I5SEtIsc5vAr"^^org.thingpedia.media-source:artist("Queen Pen"), genres=["hip pop", "lgbtq+ hip hop"] }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
A: The top rated restaurants is Veggie Garden. It is a moderate restaurants near 2464 W El Camino Real, Ste C, Mountain View, CA 94040.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: A good chinese restaurant in palo alto please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, null^^com.yelp:restaurant_cuisine("chinese")) && geo == new Location("palo alto"))[1];
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [genres] of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).artist() filter id =~ "queen"
C: #[results=[
C:   { id="spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^org.thingpedia.media-source:artist("Queen"), genres=["classic rock", "glam rock", "rock"] },
C:   { id="spotify:artist:4pejUc4iciQfgdX6OKulQn"^^org.thingpedia.media-source:artist("Queens of the Stone Age"), genres=["alternative metal", "alternative rock", "blues rock", "modern rock", "nu metal", "palm desert scene", "rock", "stoner metal", "stoner rock"] },
C:   { id="spotify:artist:3nViOFa3kZW8OMSNOzwr98"^^org.thingpedia.media-source:artist("Queen Naija"), genres=["dance pop", "pop", "pop r&b", "r&b", "urban contemporary"] },
C:   { id="spotify:artist:6p2442ymrT9lZEuCZJdYcH"^^org.thingpedia.media-source:artist("Ivy Queen"), genres=["latin", "latin hip hop", "rap latina", "reggaeton", "trap latino", "tropical"] },
C:   { id="spotify:artist:0VbIlorLz3I5SEtIsc5vAr"^^org.thingpedia.media-source:artist("Queen Pen"), genres=["hip pop", "lgbtq+ hip hop"] }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")) && geo == new Location(37.4443293, -122.1598465, "Palo Alto, California"))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
A: The top rated restaurants is Veggie Garden. It is a moderate restaurants near 2464 W El Camino Real, Ste C, Mountain View, CA 94040.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: What is the weather?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [genres] of @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).artist() filter id =~ "queen"
C: #[results=[
C:   { id="spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^org.thingpedia.media-source:artist("Queen"), genres=["classic rock", "glam rock", "rock"] },
C:   { id="spotify:artist:4pejUc4iciQfgdX6OKulQn"^^org.thingpedia.media-source:artist("Queens of the Stone Age"), genres=["alternative metal", "alternative rock", "blues rock", "modern rock", "nu metal", "palm desert scene", "rock", "stoner metal", "stoner rock"] },
C:   { id="spotify:artist:3nViOFa3kZW8OMSNOzwr98"^^org.thingpedia.media-source:artist("Queen Naija"), genres=["dance pop", "pop", "pop r&b", "r&b", "urban contemporary"] },
C:   { id="spotify:artist:6p2442ymrT9lZEuCZJdYcH"^^org.thingpedia.media-source:artist("Ivy Queen"), genres=["latin", "latin hip hop", "rap latina", "reggaeton", "trap latino", "tropical"] },
C:   { id="spotify:artist:0VbIlorLz3I5SEtIsc5vAr"^^org.thingpedia.media-source:artist("Queen Pen"), genres=["hip pop", "lgbtq+ hip hop"] }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
C: sort(rating desc of @com.yelp.restaurant() filter contains(cuisines, "chinese"^^com.yelp:restaurant_cuisine("Chinese")) && geo == new Location(37.4443293, -122.1598465, "Palo Alto, California"))[1]
C: #[results=[
C:   { id="OFUQHchaV2uqjJmO-EuVlA"^^com.yelp:restaurant("Veggie Garden"), image_url="https://s3-media4.fl.yelpcdn.com/bphoto/lXh0FX6kfTa7IXuGew5etQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/veggie-garden-mountain-view?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["vegan"^^com.yelp:restaurant_cuisine("Vegan"), "vegetarian"^^com.yelp:restaurant_cuisine("Vegetarian"), "chinese"^^com.yelp:restaurant_cuisine("Chinese")], price=enum moderate, rating=4.5, review_count=488, geo=new Location(37.399226131236, -122.1086273955, "2464 W El Camino Real, Ste C, Mountain View, CA 94040"), phone="+16509616888"^^tt:phone_number }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { temperature=16.9C, wind_speed=4.3mps, humidity=43.3, cloudiness=99.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.4519671, -122.1779927, "Menlo Park") }
C: ]];
A: The current weather in Menlo Park is cloudy. The temperature is 62.4 F and the humidity is 43.3 %.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: What is the humidity?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [humidity] of @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"));
====
# recording/db9d8bd7d3217a7100457981df813239
U: What is the temperature here?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: [temperature] of @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [temperature] of @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { location=new Location(37.4519671, -122.1779927, "Menlo Park"), temperature=16.9C, status=enum cloudy }
C: ]];
A: The current weather in Menlo Park is cloudy. The temperature is 62.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: [temperature] of @org.thingpedia.weather.current(location=new Location(37.4519671, -122.1779927, "Menlo Park"))
C: #[results=[
C:   { location=new Location(37.4519671, -122.1779927, "Menlo Park"), temperature=16.9C, status=enum cloudy }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="1TfNRKexAd"^^com.icanhazdadjoke:id, text="I’m only familiar with 25 letters in the English language. I don’t know why." }
C: ]];
A: I’m only familiar with 25 letters in the English language. I don’t know why.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: Why are you so dumb?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum abusive);
====
# recording/5b542078158696e20e322562fb01dabb
U: play me a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play me a song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).song() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum disallowed_action];
A: Sorry, failed to play: try playing from the Spotify app.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: What is the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/70109bf16f0c53e26d3f0256edc194ec
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="jbpbFlORCAd"^^com.icanhazdadjoke:id, text="People who don't eat gluten are really going against the grain." }
C: ]];
A: People who don't eat gluten are really going against the grain.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: roll a die
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="jbpbFlORCAd"^^com.icanhazdadjoke:id, text="People who don't eat gluten are really going against the grain." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between()
C: #[results=[
C:   { random=1 }
C: ]];
A: 1.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: roll a die
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="jbpbFlORCAd"^^com.icanhazdadjoke:id, text="People who don't eat gluten are really going against the grain." }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between()
C: #[results=[
C:   { random=1 }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_random_between()
C: #[results=[
C:   { random=3 }
C: ]];
A: 3.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: roll a 20-sided die
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_random_between(high=20, low=1);
====
# recording/19b8d13a23edacdf7603c1bef2ed0925
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=10.9C, wind_speed=3.6mps, humidity=93.5, cloudiness=82.8, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
A: Where are you now?
A: The current weather in Stanford, Palo Alto is cloudy. The temperature is 51.6 F and the humidity is 93.5 %.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=10.9C, wind_speed=3.6mps, humidity=93.5, cloudiness=82.8, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=3;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="mO7hqWvsPCd"^^com.icanhazdadjoke:id, text="My wife is on a tropical fruit diet, the house is full of stuff. It is enough to make a mango crazy." }
C: ]];
A: My wife is on a tropical fruit diet, the house is full of stuff. It is enough to make a mango crazy.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what time is it ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_time();
====
# recording/597d016c3fb903c31fda238659d04da0
U: Almond tell me another joke.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="JmjbxkGJBAd"^^com.icanhazdadjoke:id, text="Egyptians claimed to invent the guitar, but they were such lyres.﻿" }
C: ]];
A: Egyptians claimed to invent the guitar, but they were such lyres.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: You're funny.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum positive_emotion_thanks);
====
# recording/2a9aa342a1f370a294b3e82403c6eb56
U: what is the weather like?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=14.1C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
A: It is cloudy today in Cantor Arts Center and the temperature is 57.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what is the weather like at Stanford?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("stanford"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=14.1C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=14C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
A: It is cloudy today in Stanford, Palo Alto and the temperature is 57.2 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what is the weather like?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=14.1C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto"))
C: #[results=[
C:   { temperature=14C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.426540700000004, -122.17029258409187, "Stanford, Palo Alto") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center"))
C: #[results=[
C:   { temperature=14.1C, wind_speed=2.9mps, humidity=50.8, cloudiness=20.3, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.433014400000005, -122.17087506623025, "Cantor Arts Center") }
C: ]];
A: It is cloudy today in Cantor Arts Center and the temperature is 57.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: where am I?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_gps();
====
# recording/2c5536a9e15cdfb95872d2c79c6ef060
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="2118E69prc"^^com.icanhazdadjoke:id, text="Dad I’m hungry’ ... ‘Hi hungry I’m dad" }
C: ]];
A: Dad I’m hungry’ ... ‘Hi hungry I’m dad.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what else can you do
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help);
====
# online/121537
U: if the temperature is less than 13 c then set volume on my speaker to 14 %
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13C => @org.thingpedia.iot.speaker.set_volume(volume=14);
====
# online/121538
U: if the thermostat says less than 13 c then set volume on my speaker to 14 %
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13C => @org.thingpedia.iot.speaker.set_volume(volume=14);
====
# online/363766
U: say "str:QUOTED_STRING::0:" when it rains
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @org.thingpedia.builtin.thingengine.builtin.say(message="str:QUOTED_STRING::0:");
====
# online/1647275
U: show me a joke when i go to work
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.work => @com.icanhazdadjoke.get();
====
# online/1647277
U: show me a joke when i get to work
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.work => @com.icanhazdadjoke.get();
====
# online/1647279
U: show me a joke when i leave work
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.work) => @com.icanhazdadjoke.get();
====
# online/55592326
U: notify me if the door opens and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592329
U: notify me when the door closes and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum closed;
====
# online/55592332
U: notify me when someone opens the door while i am away from home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592603
U: notify me if my door opens and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592604
U: notify me if my door is open and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592605
U: notify me when my door gets opened and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592606
U: notify me when somebody opens my door and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592607
U: notify me when somebody opens the door and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592608
U: update me when somebody opens the door and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592609
U: alert me when somebody opens the door and i am not at home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592611
U: alert me when the door is opened and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592612
U: alert me when my door is opened and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592614
U: tell me when my door is opened and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592616
U: alert me when my door is opened and i am out of home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592617
U: update me when my door is opened and i am out of home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592618
U: update me when my door is opened and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592619
U: update me when the door is opened and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592620
U: tell me when the door is opened and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592621
U: tell me when somebody opens my door and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592622
U: tell me when somebody opens the door and i am out of the house
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592684
U: if i am not at home and the door is open, notify me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592685
U: if i am not at home and my door is open, notify me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592687
U: if i am not at home and my door is closed, alert me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum closed;
====
# online/55592688
U: if i am not at home and the door is closed, alert me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum closed;
====
# online/55592689
U: if i am not at home and the door is closed, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592692
U: if i am not at home and the door is closed by someone, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592693
U: if i am not at home and someone opens the door, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592694
U: if i am not at home and someone opened the door, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592695
U: if i am not at home and someone open the door, tell me
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592696
U: tell me if i am not at home and someone open the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592698
U: tell me if i am not at home and someone opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592699
U: alert me if i am not at home and someone opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592701
U: update me if i am not at home and someone opens the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592704
U: tell me if i am not at home and somebody opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592705
U: tell me once i am not at home and somebody opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592707
U: tell me once i am not at home and somebody opens the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592708
U: tell me the moment i am not at home and somebody opens the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# online/55592709
U: tell me the moment i am not at home and somebody opens my door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum open;
====
# log/53942
U: turn off the lights when i leave home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.home) => @org.thingpedia.iot.light-bulb.set_power(power=enum off);
====
# log/54896
U: once motion is detected, turn on the light
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.motion.motion()) filter state == enum detecting => @org.thingpedia.iot.light-bulb.set_power(power=enum on);
====
# log/54905
U: if motion is not detected, turn off my toilet light
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.motion.motion()) filter state == enum not_detecting => @org.thingpedia.iot.light-bulb(name="toilet").set_power(power=enum off);
====
# log/90884
U: the next time i come home, turn the light in wohnzimmer on
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.home => @org.thingpedia.iot.light-bulb(name="wohnzimmer").set_power(power=enum on);
====
# log/158214
U: turn on outside lights when garage door is opening
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.door(name="garage").state()) filter state == enum open => @org.thingpedia.iot.light-bulb(name="outside").set_power(power=enum on);
====
# recording/2ed881f9c22759d0a93ba16835976a70
U: What is the news of the day?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[
C:   { id="4255797450717009709"^^com.smartnews:article, title="Former U.S. gymnastics coach with ties to disgraced doctor Larry Nassar charged with sexual assault, human trafficking", date=new Date("2021-02-25T18:30:34.000Z"), source="Associated Press", url="https://apnews.com/article/john-geddert-charged-sexual-assault-147800b76ba2f86f1314e85326dfd197" },
C:   { id="4255777180182646383"^^com.smartnews:article, title="Costco raising minimum wage to $16 an hour", date=new Date("2021-02-25T16:54:41.000Z"), source="The Hill", author="Zack Budryk", url="https://thehill.com/policy/finance/540503-costco-raising-minimum-wage-to-16-an-hour" },
C:   { id="4254753650544481010"^^com.smartnews:article, title="If You Have This Snack at Home, Get Rid of it Now, FDA Says", date=new Date("2021-02-22T20:56:22.000Z"), source="Best Life", author="Sarah Crow", url="https://bestlifeonline.com/pretzel-recall-news/" },
C:   { id="4255772202021948245"^^com.smartnews:article, title="Trump's Prediction About Tiger Woods Is Turning Some Heads", date=new Date("2021-02-25T16:39:00.000Z"), source="Nicki Swift", author="J.E. Reich", url="https://www.nickiswift.com/341910/trumps-prediction-about-tiger-woods-is-turning-some-heads/?zsource=smartnews" },
C:   { id="4255768684687001881"^^com.smartnews:article, title="'No, I don't understand': Costco CEO stuns Lindsey Graham during disagreement over minimum wage increase", date=new Date("2021-02-25T16:24:27.000Z"), source="Raw Story", author="David Edwards", url="https://www.rawstory.com/lindsey-graham-minimum-wage/" },
C:   { id="4255784473846621509"^^com.smartnews:article, title="‘Kind and Generous’ Pizzeria Owner, 56, Brutally Beaten By Thieves in Pennsylvania", date=new Date("2021-02-25T16:53:17.000Z"), source="NextShark", author="Ryan General", url="https://nextshark.com/norristown-56-year-old-female-pizzeria-owner/" },
C:   { id="4255727817972517854"^^com.smartnews:article, title="Horror as Oprah Winfrey asks Mary-Kate and Ashley Olsen about their size in resurfaced interview", date=new Date("2021-02-25T13:25:27.000Z"), source="Metro", author="Nola Ojomu", url="https://metro.co.uk/2021/02/25/oprah-winfrey-asks-teen-mary-kate-and-ashley-olsen-about-their-size-resurfaced-interview-14144868/?ito=smart-news" },
C:   { id="4255778226426618206"^^com.smartnews:article, title="Phone Records Prove House Sergeant-at-Arms DID Ignore Pleas for Backup: Capitol Police Chief", date=new Date("2021-02-25T17:03:09.000Z"), source="The Daily Beast", author="Pilar Melendez", url="https://www.thedailybeast.com/capitol-police-chief-yogananda-pittman-proves-pleas-to-house-sergeant-at-arms-paul-irving-were-ignored" },
C:   { id="4255777039912542331"^^com.smartnews:article, title="Jailed Putin critic Navalny moved, probably to prison camp: lawyer, activist", date=new Date("2021-02-25T15:21:48.000Z"), source="Reuters", author="Reuters Staff", url="https://www.reuters.com/article/us-russia-politics-navalny-prison-idUSKBN2AP245" },
C:   { id="4255482516892288396"^^com.smartnews:article, title="Woman Finds Husband’s Secret IG Account, Feels Shocked For All The Right Reasons", date=new Date("2021-02-24T21:28:07.000Z"), source="Goalcast", author="Joel Balsam", url="https://www.goalcast.com/2021/02/24/woman-finds-husband-secret-ig-account/" }
C: ]]
C: #[count=35];
A: The latest news is Former U.S. Gymnastics coach with ties to disgraced doctor Larry Nassar charged with sexual assault, human trafficking. It is a new articles from Associated Press published on 2/25/2021, 10:30:34 AM.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: What IoT devices can you work with?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum iot_help);
====
# recording/87c42d2fe8cfccf153ed1cfa89144072
U: find me a cat picture
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thecatapi.cat();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.thecatapi.cat()
C: #[results=[
C:   { id="uFkQ1tJ5o"^^com.thecatapi:cat, picture_url="https://s3.us-west-2.amazonaws.com/cdn2.thecatapi.com/images/uFkQ1tJ5o.jpg"^^tt:picture, link="http://thecatapi.com/?id=uFkQ1tJ5o"^^tt:url }
C: ]];
A: Here is a cat picture.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: find me a picture of a woman
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.image_search(query="woman");
====
# online/cheat1435976
U: check temperature on thermostat, if it is below 13 change it to 14
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@org.thingpedia.iot.temperature.temperature()), value <= 13F => notify;
UT: now => @org.thingpedia.iot.climate.set_target_temperature(value=14F);
====
# online/121049
U: if the weather is colder than 13 c then set my thermostat to 14 c
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@org.thingpedia.weather.current(location=$?)), temperature <= 13C => notify;
UT: now => @org.thingpedia.iot.climate.set_target_temperature(value=14C);
====
# online/121527
U: if the weather is colder than 13 c then set my thermostat to 14 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@org.thingpedia.weather.current(location=$?)), temperature <= 13C => notify;
UT: now => @org.thingpedia.iot.climate.set_target_temperature(value=14F);
====
# log/40989
U: news summaries from bbc comma huffington post
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bbc.top_stories();
UT: @com.huffingtonpost.frontpage();
====
# online/121061
U: post my instagram pictures on facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.facebook.post_picture(picture_url=picture_url);
====
# online/121062
U: post my new instagram pictures on facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.facebook.post_picture(picture_url=picture_url);
====
# online/121063
U: post my new instagram pictures on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121067
U: every day tweet the new nasa astronomy picture of the day
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121068
U: every day post the new nasa astronomy picture of the day on facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @com.facebook.post_picture(picture_url=picture_url);
====
# online/121070
U: post new my instagram pictures on tumblr
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.tumblr.blog.post_picture(picture_url=picture_url);
====
# online/121081
U: post on facebook global warming if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.facebook.post(status="global warming");
====
# online/121083
U: post on tumblr title "str:QUOTED_STRING::0:" body "str:QUOTED_STRING::1:" if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.tumblr.blog.post_text(body="str:QUOTED_STRING::1:", title="str:QUOTED_STRING::0:");
====
# online/121085
U: share a link on linkedin if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.linkedin.share();
====
# online/121111
U: if i post a picture on instagram then post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121118
U: if i post a picture on instagram with hashtag amethist then post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures() filter contains(hashtags, "amethist"^^tt:hashtag)) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121120
U: if i post a picture on instagram at home then post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures() filter location == $location.home) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/121140
U: send a nasa picture to slack every day at 0:0
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: attimer(time=[new Time(0, 0)]) => @gov.nasa.apod() => @com.slack.send_picture(picture_url=picture_url);
====
# online/121210
U: send me new articles from the wall street journal us business section on gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum us_business)) => @com.gmail.send_email(message=$result);
====
# online/121344
U: send me new articles from the wall street journal technology section on gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum technology)) => @com.gmail.send_email(message=$result);
====
# online/121541
U: if someone tweets with hashtag str:HASHTAG::0: then post it on facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.twitter.home_timeline() filter contains(hashtags, "str:HASHTAG::0:"^^tt:hashtag)) => @com.facebook.post(status=$result);
====
# online/121543
U: when i post a picture on instagram post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/122785
U: when i publish a new picture on instagram, post it on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/123117
U: translate new wall street journal opinion posts
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum opinions)) => @com.yandex.translate.translate(text=$result);
====
# online/123119
U: if new post in wall street journal technology then translate the event
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum technology)) => @com.yandex.translate.translate(text=$result);
====
# online/123120
U: if new post in wall street journal technology then translate it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum technology)) => @com.yandex.translate.translate(text=$result);
====
# online/123121
U: if new post in wall street journal world news then translate it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum world_news)) => @com.yandex.translate.translate(text=$result);
====
# online/135862
U: send new washington post the fix articles on slack to creepiness
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_blog_post(section=enum the_fix)) => @com.slack.send(channel="creepiness"^^tt:hashtag, message=$result);
====
# online/135863
U: send new washington post world views articles on slack to relaxations
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_blog_post(section=enum world_views)) => @com.slack.send(channel="relaxations"^^tt:hashtag, message=$result);
====
# online/141672
U: translate washington post to czech
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("czech"), text=$result);
====
# online/141673
U: translate washington post to str:ENTITY_tt:iso_lang_code::0:
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language="str:ENTITY_tt:iso_lang_code::0:"^^tt:iso_lang_code, text=$result);
====
# online/337978
U: play queens we are the champions from youtube on my tv if someone commits on github
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.github.get_commit()) => @com.youtube.search_videos(query="queens we are the champions") => @org.thingpedia.iot.tv.play_url(url=video_url);
====
# online/341549
U: if the weather is raining, send a gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/341550
U: if it's raining, send a gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/341552
U: if it's rains, send a gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/341553
U: if it rains, send a gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/341559
U: tweet "str:QUOTED_STRING::0:" when a politics article is posted in the washington post
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article(section=enum politics)) => @com.twitter.post(status="str:QUOTED_STRING::0:");
====
# online/359848
U: translate washington post headlines to swedish
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("swedish"), text=title);
====
# online/359888
U: send new phd comics picture to my gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.phdcomics.get_post()) => @com.gmail.send_picture(picture_url=picture_url);
====
# online/359892
U: set me as away on slack if calendar busy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.icalendar.list_events()) filter status == enum started => @com.slack.setPresence(presence=enum away);
====
# online/359916
U: if i upload a new photo to instagram, also upload it to twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures()) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/359918
U: if i receive a gmail and its subject has "str:QUOTED_STRING::0:" in it, tweet the subject
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(email_id of @com.gmail.inbox(is_important=true) filter subject =~ "str:QUOTED_STRING::0:") => @com.twitter.post(status=subject);
====
# online/383234
U: post on twitter if i receive mail in gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(email_id of @com.gmail.inbox(is_important=true)) => @com.twitter.post();
====
# online/1459786
U: every hour send the weather on gmail
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: timer(interval=1h) => @org.thingpedia.weather.current() => @com.gmail.send_picture(message=$result);
====
# online/1520130
U: translate washington post headlines to str:ENTITY_tt:iso_lang_code::0:
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.washingtonpost.get_article()) => @com.yandex.translate.translate(target_language="str:ENTITY_tt:iso_lang_code::0:"^^tt:iso_lang_code, text=title);
====
# online/1545152
U: if weather rains send email
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/1545153
U: if whether rains send email
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter status == enum raining => @com.gmail.send_email();
====
# online/1645673
U: automatically set my laptop background to the nasa astronomy picture of the day
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @org.thingpedia.builtin.thingengine.gnome.set_background(picture_url=picture_url);
====
# online/1659101
U: automatically set the background of my laptop to the new nasa pic of the day
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @org.thingpedia.builtin.thingengine.gnome.set_background(picture_url=picture_url);
====
# online/1684055
U: when my google drive fiiles changes notify me on slack
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.google.drive.list_drive_files()) => @com.slack.send();
====
# online/1684077
U: change your background to nasa image of the day
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.apod()) => @org.thingpedia.builtin.thingengine.gnome.set_background(picture_url=picture_url);
====
# online/13722307
U: when the new york times has an article about china, translate the headline to chinese, then email it to my friend
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.nytimes.get_front_page() filter title =~ "china") => @com.yandex.translate.translate(text=title) => @com.gmail.send_email(message=translated_text);
====
# online/15252552
U: post bbc news on twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.bbc.top_stories()) => @com.twitter.post(status=$result);
====
# online/27565811
U: when the new york times has an article about china, translate the title to chinese
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.nytimes.get_front_page() filter title =~ "china") => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("chinese"), text=title);
====
# online/27565812
U: when the wall street journal has an article about china, translate the title to chinese
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.wsj.get(section=enum world_news) filter title =~ "china") => @com.yandex.translate.translate(target_language=null^^tt:iso_lang_code("chinese"), text=title);
====
# online/53256260
U: when i upload a new instagram picture with hashtag ovalworkshop, post it to twitter
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.instagram.get_pictures() filter contains(hashtags, "ovalworkshop"^^tt:hashtag)) => @com.twitter.post_picture(picture_url=picture_url);
====
# online/55592353
U: close the shades when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592359
U: open the shades when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592360
U: open the shades when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592361
U: close the shades when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592370
U: close the window when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592374
U: open the window when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592375
U: open my window when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592377
U: close my window when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592388
U: close my shutter when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592393
U: close the shutter when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592487
U: close the damper when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592494
U: close my damper when the temperature is above 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature >= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592496
U: close the damper when the temperature is below 13 degrees
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.weather.current()) filter temperature <= 13C => @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# online/55592639
U: open my window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592640
U: open my windows if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592642
U: open my window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592643
U: open the window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592644
U: open the windows when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592645
U: open the windows if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592646
U: open the living room window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="living room").set_openclose(state=enum open);
====
# online/55592647
U: open the bedroom window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="bedroom").set_openclose(state=enum open);
====
# online/55592648
U: open my toilet window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="toilet").set_openclose(state=enum open);
====
# online/55592650
U: open my bedroom window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="bedroom").set_openclose(state=enum open);
====
# online/55592651
U: open the kitchen window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="kitchen").set_openclose(state=enum open);
====
# online/55592652
U: open the living room window when smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.air.state()) filter state == enum smoke => @org.thingpedia.iot.cover(name="living room").set_openclose(state=enum open);
====
# online/57061575
U: turn on the vacuum when i leave home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.home) => @org.thingpedia.iot.vacuum.set_power(power=enum on);
====
# online/57061576
U: turn off the fan when i leave home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.home) => @org.thingpedia.iot.fan.set_power(power=enum off);
====
# online/57061577
U: close all the windows when i leave home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == $location.home) => @org.thingpedia.iot.cover(all=true).set_openclose(state=enum close);
====
# online/57061581
U: turn off the fan when i open the window
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter state == enum opened => @org.thingpedia.iot.fan.set_power(power=enum off);
====
# online/57061583
U: alert me when somebody opens the window and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum opened;
====
# online/57061584
U: alert me when the window is opened and i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum opened;
====
# online/57061585
U: alert me when the window is opened while i am not home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum opened;
====
# online/57061586
U: alert me when the window is opened while i am away
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum opened;
====
# online/57061587
U: alert me when the window is opened while i am away from home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum opened;
====
# online/57061592
U: send an alert when i leave home and the window is open
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum opened;
====
# online/57061593
U: send an alert when i leave home and the door is open
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter any(@org.thingpedia.builtin.thingengine.builtin.get_gps() filter !(location == $location.home)) && state == enum opened;
====
# online/62110232
U: order me a large latte when i get to work
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.work => @org.thingpedia.demo.coffee.order(beverage=enum latte, size=enum large);
====
# online/62110234
U: tweet we're all gonna die when nasa says there is an asteroid nearby
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@gov.nasa.asteroid()) => @com.twitter.post(status="we 're all gon na die");
====
# online/62110239
U: automatically copy everything from almondstanford from twitter to facebook
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.twitter.home_timeline() filter author == "almondstanford"^^tt:username) => @com.facebook.post(status=text);
====
# online/62110240
U: when i total more than 13 steps in a day, post on facebook about it
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.fitbit.getsteps()) filter steps >= 13 => @com.facebook.post(status=$result);
====
# online/62110292
U: when there is a new video by mkbhd, shoot an email
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.youtube.list_videos() filter channel_title =~ "mkbhd") => @com.gmail.send_email();
====
# log/2267
U: every day at 0:0, send a cat url to str:EMAIL_ADDRESS::0: with subject "str:QUOTED_STRING::0:"
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: attimer(time=[new Time(0, 0)]) => @com.thecatapi.cat() => @com.gmail.send_picture(picture_url=picture_url, subject="str:QUOTED_STRING::0:", to="str:EMAIL_ADDRESS::0:"^^tt:email_address);
====
# log/2635
U: turn off my tv if there is no person in the room
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.occupancy.occupancy()) filter state == enum not_detecting => @org.thingpedia.iot.tv.set_power(power=enum off);
====
# log/8095
U: when price of str:ENTITY_tt:cryptocurrency_code::0: changes say hi
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@com.cryptonator.get_price(currency="str:ENTITY_tt:cryptocurrency_code::0:"^^tt:cryptocurrency_code)) => @org.thingpedia.builtin.thingengine.builtin.say(message="hi");
====
# log/56465
U: turn on couch light when front door lock is unlocked
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.lock(name="front").state()) filter state == enum unlocked => @org.thingpedia.iot.light-bulb(name="couch").set_power(power=enum on);
====
# online/121045
U: tweet the new work if the thermostat says more than 13 c
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13C => @com.twitter.post(status="the new work");
====
# online/121075
U: tweet girls if the temperature is less than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13F => @com.twitter.post(status="girls");
====
# online/121076
U: tweet if the temperature is less than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13F => @com.twitter.post();
====
# online/121077
U: tweet "str:QUOTED_STRING::0:" if the temperature is less than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value <= 13F => @com.twitter.post(status="str:QUOTED_STRING::0:");
====
# online/121080
U: tweet pretty hot in here if the temperature is more than 13 f
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.temperature.temperature()) filter value >= 13F => @com.twitter.post(status="pretty hot in here");
====
# recording/2e93be7a693be9b05438ff38501f0b04
U: define covid
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @info.owlbot.get(word="covid");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
A: Sorry, you must open the Spotify app first.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: who is taylor swift
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.artist() filter id =~ "taylor swift";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @info.owlbot.get(word="covid")
C: #[results=[]]
C: #[error="Request failed with status code 404"];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[]]
C: #[error=enum no_active_device];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).artist() filter id =~ "taylor swift"
C: #[results=[
C:   { id="spotify:artist:06HL4z0CvFAxyc27GXpf02"^^org.thingpedia.media-source:artist("Taylor Swift"), genres=["dance pop", "pop", "pop dance"], popularity=98 }
C: ]];
A: I have one, it is Taylor Swift. It is a pop artist.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: no
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/4924fbdb1bde1859089c3d39476f5155
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/3ea4329a70d2aa5bfc206bcf0dfa9282
U: no
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/0d040233eb6b643022f315f1b73daaeb
U: what will be the weather tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.4863239, -122.232523, "Redwood City, California"))
C: #[results=[
C:   { temperature=8.7C, wind_speed=3.5mps, humidity=86.1, cloudiness=100, fog=0, status=enum raining, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=9;content_type=image/png"^^tt:picture, date=new Date("2021-03-18T14:00:00.000Z"), location=new Location(37.4863239, -122.232523, "Redwood City, California") }
C: ]];
A: It will be raining tomorrow at 7:00 AM in Redwood City, California and the temperature will be 47.7 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: show me in celsius
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=enum celsius);
====
# recording/fc62d25abb4d9dfaee6d6b089a523b85
U: what's the news today
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.smartnews.article();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[
C:   { id="4278714058527478000"^^com.smartnews:article, link="https://mmajunkie.usatoday.com/2021/04/2021-pfl-2-video-antonio-carlos-junior-submission-tom-lawlor"^^tt:url, title="2021 PFL 2 video: Antonio Carlos Junior submits Tom Lawlor in first", date=new Date("2021-04-29T23:30:55.000Z"), source="MMA Junkie", author="MMA Junkie Staff", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714058527478015.mp3"^^tt:url, content="Tom Lawlor looked like he might give Antonio Carlos Junior some fits early in their Thursday fight. Then Junior (11-5) turned the table on Lawlor (10-8) and submitted him with 17 seconds left in the first round of their light heavyweight bout at 2021 PFL 2. Lawlor was able to work for a guillotine choke from his back in the first round, and it appeared to be tight – but not tight enough to have the Brazilian in too much trouble. After Junior got his head out, he was able to pass to full mount. In mount, Junior worked for an arm-triangle choke, and when that wasn’t there, he jumped for a guillotine choke while nearly letting Lawlor back to his feet. It didn’t take long for Lawlor to tap, giving Junior a key six points in the light heavyweight season standings. Check out Junior’s finish in the video below from Ocean Casino Resort in Atlantic City, N.J. FIRST ROUND FINISH FOR SHOEFACE! He moves on with 6 points in the light heavyweight standings!#2021PFL2 pic.twitter.com/Y6gE82ympS — PFL (@PFLMMA) April 29, 2021" },
C:   { id="4278713729345916400"^^com.smartnews:article, link="https://www.audacy.com/wben/local-sports/bills/nfl-draft-live-grades-and-analysis-for-every-1st-round-pick"^^tt:url, title="2021 NFL Draft: Live grades and analysis for all 32 first round picks", date=new Date("2021-04-29T23:58:00.000Z"), source="Audacy", author="Jesse Pantuosco", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713729345916591.mp3"^^tt:url, content="The 2021 NFL Draft, in all its three-day glory, is finally upon us.The road to Thursday night’s highly-anticipated opening round in Cleveland, Ohio was paved by the usual assortment of fiercely debated mock drafts, elaborate smokescreens orchestrated by front-office mayhem-seekers like diabolical San Francisco 49ers general manager John Lynch (and his equally anarchic partner in crime, Kyle Shanahan, who may or may not be plotting Jimmy Garoppolo’s assassination), obsessive film study and contentious Twitter threads arguing everything from DeVonta Smith’s weight to the health of Zach Wilson’s shoulder.The internet rumor mill has churned out some doozies this draft season, but after weeks — if not months — of desperate truth-seeking, the guessing game is over. No more hiding in the shadows — judgment day is here and it’s time for teams to show us their cards once and for all.Keep it here all night for instant analysis and live grades for each first round pick, beginning with the Jacksonville Jaguars at No. 1 overall.1.) Jacksonville Jaguars:Grade: 2.) New York Jets: Grade:3.) San Francisco 49ers:Grade:4.) Atlanta Falcons:Grade:5.) Cincinnati Bengals:Grade:6.) Miami DolphinsGrade:7.) Detroit LionsGrade:8.) Carolina Panthers:Grade:9.) Denver Broncos:Grade:10.) Dallas CowboysGrade:11.) New York Giants:Grade:12.) Philadelphia Eagles: Grade:13.) Los Angeles Chargers:Grade:14.) Minnesota Vikings:Grade:15.) New England Patriots:Grade:16.) Arizona Cardinals:Grade:17.) Las Vegas Raiders:Grade:18.) Miami Dolphins:Grade:19.) Washington Football Team: Grade:20.) Chicago Bears:Grade:21.) Indianapolis Colts:Grade:22.) Tennessee Titans:Grade:23.) New York Jets:Grade:24.) Pittsburgh Steelers:Grade:25.) Jacksonville Jaguars: Grade:26.) Cleveland Browns:Grade:27.) Baltimore Ravens:Grade:28.) New Orleans Saints: Grade:29.) Green Bay Packers: Grade:***30.) Buffalo Bills: Grade:31.) Baltimore Ravens:Grade:32.) Tampa Bay Buccaneers: Grade:LISTEN on the Audacy AppSign Up and Follow Audacy SportsFacebook | Twitter | Instagram" },
C:   { id="4278714242246382000"^^com.smartnews:article, link="https://www.baltimoresun.com/business/bs-bz-domino-resumes-operations-20210429-rvsvgiluzvdzvi2vjgnsy4oxe4-story.html"^^tt:url, title="Domino Sugar resumes full operations eight days after fire at Baltimore refinery", date=new Date("2021-04-30T00:00:00.000Z"), source="Baltimore Sun", author="Colin Campbell, Baltimore Sun", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714242246381851.mp3"^^tt:url, content="Smoke billows from a fire at the Domino Sugar factory in Baltimore. | Baltimore Sun The 99-year-old Domino Sugar refinery in Baltimore resumed full operations Wednesday after a fire burned down a giant on-site raw sugar shed, causing eight days of downtime to parts of its processes, the refinery’s owner announced. Mickey Seither, senior vice president of operations for American Sugar Refining Inc., Domino’s parent company, said the refinery’s return to full operations in just over a week “is a credit to our expert team of engineers and our more than 500 employees who have been working around the clock.” “We want to again express our gratitude to our employees, not only in Baltimore but across our network of facilities, and the Baltimore City Fire Department for their quick response, which spared the refinery itself from any damage,” Seither said in a statement. The refinery, which is replacing its neon, rooftop sign with an LED replica, resumed partial operations two days after the fire on the afternoon of April 20. Those included processing the sugar already inside the facility and packaging and shipping retail and bulk products, the company said. While the main raw sugar storage shed collapsed in the fire, the refinery has restored use to a secondary raw sugar shed on its property, the company said." },
C:   { id="4278713752284565500"^^com.smartnews:article, link="https://www.audacy.com/973thefansd/sports/san-diego-state-aztecs/trey-pulliam-on-with-john-kentera"^^tt:url, title="Trey Pulliam on with John Kentera", date=new Date("2021-04-29T23:47:32.000Z"), source="Audacy", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713752284565711.mp3"^^tt:url, content="San Diego State Aztecs Men's Basketball Guard Trey Pulliam joined the John Kentera Show on Thursday.Pulliam talked about growing up in Texas by Texas A&M and what his journey was like in basketball at a young age.Later on, Pulliam discusses how he bounced around junior colleges in Texas after attending a prep school out of high school before finally landing at San Diego State.Pulliam also talks about his decision to return to San Diego State and what he plans on improving on during the offseason." },
C:   { id="4278713824070078500"^^com.smartnews:article, link="https://people.com/movies/david-cronenbergs-new-film-crimes-of-the-future-to-star-viggo-mortensen-kristen-stewart-lea-seydoux/"^^tt:url, title="David Cronenberg’s Crimes of the Future to Star Viggo Mortensen, Kristen Stewart & Léa Seydoux: Report", date=new Date("2021-04-30T00:00:11.000Z"), source="People", author="<a href=\"https://people.com/author/salina-tsegai/\">Salina Tsegai</a>", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713824070078688.mp3"^^tt:url, content="Matt Winkelmeyer/Getty; Daniele Venturelli/WireImage; Mike Marsland/WireImage David Cronenberg's latest upcoming sci-fi movie is inspired by his 1970 film of the same name and boasts an impressive cast. According to Deadline, The Fly director's new film Crimes of the Future will start filming in Athens, Greece this summer and will star Viggo Mortensen, Kristen Stewart and Léa Seydoux. This is the first original screenplay written by Cronenberg since his 1999 sci-fi thriller eXistenZ, and his last film Map of the Stars came out seven years ago. RELATED: Viggo Mortensen Makes Directorial Debut with Deeply Personal Family Drama Falling: Watch the Trailer Crimes of the Future's logline reads: \"The film takes a deep dive into the not-so-distant future where humankind is learning to adapt to its synthetic surroundings. \"This evolution moves humans beyond their natural state and into a metamorphosis, altering their biological makeup. While some embrace the limitless potential of transhumanism, others attempt to police it,\" the logline continues. \"Either way, in this perfectly crafted Cronenberg world, which marks the iconic filmmaker's return to sci-fi, 'Accelerated Evolution Syndrome', is spreading fast.\" The movie centers around Saul Tenser, \"a beloved performance artist who has embraced Accelerated Evolution Syndrome, sprouting new and unexpected organs in his body.\" \"Along with his partner Caprice, Tenser has turned the removal of these organs into a spectacle for his loyal followers to marvel at in real time theatre,\" the longline adds. \"But with both the government and a strange subculture taking note, Tenser is forced to consider what would be his most shocking performance of all.\" RELATED: Kristen Stewart as Princess Diana Seen with Onscreen Sons William and Harry \"I have unfinished business with the future,\" Cronenberg said about his newest project. Robert Lantos, Cronenberg's four-time collaborator, will produce the Neon and Serendipity Point Films project. \"To work with David Cronenberg is to embark on a journey exploring terrain where no one has gone before,\" said Lantos. \"Each of our collaborations has been an exhilarating adventure and David's unwavering vision is what real cinema is all about.\" Scott Speedman, Welket Bungué, Don McKellar and Lihi Kornowski are also set to star in the film, which begins filming in August." },
C:   { id="4278714224651283000"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/kyrgyzstan-tajikistan-cross-border-shelling-in-water-dispute/100106108"^^tt:url, title="Six civilians are dead as Kyrgyz and Tajik security forces clash at border in water dispute", date=new Date("2021-04-29T23:49:53.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714224651283022.mp3"^^tt:url, content="At least six civilians are dead and dozens wounded after security forces from Kyrgyzstan and Tajikistan exchanged fire across the border over a water reservoir.Residents also hurled rocks at each other in the clash over the resource.The frontier, dating to the Soviet era, is poorly demarcated and minor border disputes are frequent.The latest quarrel quickly escalated as border guards on both sides joined the fighting on Thursday local time.After hours of talks, the two countries agreed to a ceasefire and troops pulled back.But by 1:00am on Friday, Kyrgyz police reported a renewal of gunfire on the Tajikistan border.More than 800 Kyrgyz residents were evacuated from several villages engulfed by the clashes.A Kyrgyz government source said the country's capital, Bishkek, feared it could permanently lose part of its territory after temporarily abandoning it.Kyrgyzstan reported three civilians had been killed and 81 people, including at least two soldiers, were wounded.In Tajikistan, the mayor's office in the nearby city of Isfara said three Tajiks died and 31 were injured, including the mayor who received a gunshot wound, the RIA-Novosti news agency reported.Both sides trade blame for cross-border shellingClashes began late on Wednesday along the frontier between Tajikistan's northern Sughd province and Kyrgyzstan's southern Batken province because of a dispute over a reservoir and pumping station, claimed by both sides, on the Isfara river.Residents on both sides threw rocks at each other before the fighting escalated when both sides began exchanging gunfire on Thursday, according to the security agencies of both countries.Kyrgyzstan's State National Security Committee accused the Tajik side of using mortars to shell the disputed water facility.Tajik authorities said the facility belonged to them and accused Kyrgyz forces of shooting at Tajik border guards.A large part of the Tajik-Kyrgyz border has remained unmarked, fueling fierce disputes over water, land and pastures.Kyrgyz and Tajik delegations have held several rounds of talks in recent years but have failed to end the border controversy.ABC/wires" },
C:   { id="4278713691228082000"^^com.smartnews:article, link="https://www.rawstory.com/andrew-giuliani/"^^tt:url, title="WATCH: CNN's Erin Burnett humiliates Rudy Giuliani's son as he tries to attack FBI investigation of his dad", date=new Date("2021-04-29T23:57:15.000Z"), source="Raw Story", author="Matthew Chapman", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713691228082370.mp3"^^tt:url, content="On CNN Thursday evening, Rudy Giuliani's son Andrew went on \"Erin Burnett OutFront\" to defend his father and slam the federal investigation into his Ukraine work as a political hit job — only to crash and burn spectacularly on national television.\"The thing is, though, to get the warrant, it takes a lot,\" said Burnett.\"Who signed the warrant? A judge. Who appointed the judge? Barack Obama,\" said Giuliani. \"Since Eric Holder became attorney general, we have seen the Justice Department get politicized ... no other judge would sign this warrant.\"\"You have any proof no other judge would sign the warrant?\" asked Burnett.\"I don't have proof, but do you have any proof that any other judge would sign the warrant?\" demanded Giuliani.After a long detour in which the younger Giuliani tried to steer the conversation to conspiracy theories about Hunter Biden, Burnett cornered him again on his baseless allegations the investigation is politically motivated.\"Let me ask you something important about your claims of political motivation,\" said Burnett. \"President Biden was asked about it today.\" She played the clip of Biden saying he had no advance knowledge of the raid on the elder Giuliani's home and office. \"Do you have any reason to not take him at his word, Andrew? ... I'll just make the point again that his son's under investigation and he's done nothing to stop it.\"\"So you don't think he actually has the motive to intervene in that investigation?\" insisted Giuliani.\"He may, but he hasn't done it,\" shot back Burnett.Watch below: Burnett: You need probably cause to get a warrant A. Giuliani: Only a corrupt Obama judge would sign it. No other j... https://t.co/mU7Mr7gTWU— Andrew Feinberg (@AndrewFeinberg) 1619738538.0 EB: President Biden says he didn't know that SDNY was going to serve a search warrant on your dad. Do you have any... https://t.co/DUhERW1Wnj— Andrew Feinberg (@AndrewFeinberg) 1619739221.0" },
C:   { id="4278714184415324700"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/bruce-the-flood-duck/100096252"^^tt:url, title="Have you seen Bruce? Rubber duck released down the Barwon River goes missing", date=new Date("2021-04-29T23:49:53.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714184415324746.mp3"^^tt:url, content="It started out as a joke and ended up with a bright yellow rubber duck being sent down the flooded Barwon River in northern New South Wales.Mungindi resident Tracey Neilsen said the idea for Bruce the Mungindi Flood Duck came to her to cheer up her nephew who has autism and was doing it tough during the floods earlier this month.\"The idea was to drop a duck in the river and see how far it goes,\" Ms Nielsen said.Ms Neilsen said her nephew, three-year-old Dallas Jones, had struggled with the disruptions caused by the flooding after his family was forced to evacuate their rural property and staying with her in town temporarily.\"I thought it would bring a lot of joy to people because, like in Mungindi itself and the rest of down below us, we've had fires, drought, plague, and now floods. I think it would be something different,\" she said.\"It would float past the house and they would see it because their house is right on the river.\"It would bring a smile to everybody's face, especially for kids to see this giant duck floating down the river.\"And then it kind of just escalated from there.\"Tour of the townIn a small town like Mungindi word gets around, and Bruce quickly took on celebrity status.Before setting off on its riverine adventure on April 10, Bruce was taken around the town and had its photo taken with State Emergency Service volunteers, police, and ambulance officers.Queensland Police Service Senior Constable Curtis Jope said everyone was happy to get behind Bruce.\"We're a pretty small town out here at Mungindi, but the community always gets behind initiatives like this, especially to make a young boy with autism happy,\" he said.\"I'm very proud of the town that I work in and there's some really good people in this town.\"Where's Bruce?The only problem is Bruce has gone AWOL.The rubber duck missed its scheduled float past Dallas Jones' house and, despite their best efforts, Ms Nielsen said they had not spotted or been able to find Bruce.But they are confident Bruce is still bobbing along on its southward escape route.\"I'm hoping it passed them during the night and it's heading to Melbourne,\" she said.The border town — split between Queensland and NSW — has had a rough time when it lost its only supermarket and butcher in a massive fire last September.The destruction compounded weeks of stress over COVID-19 border restrictions that cut the community off from key services.The recent flooding has boosted morale though, with many hoping the floodwaters will lead to a good year for the region's farmers.For Tracey Nielsen, she hopes Bruce — with its fixed smile and smart black bow tie — can help spread some of the cheer from Mungindi as it makes its way down the river system.\"I'm also hoping if it gets stuck, someone would see it and pick him up, take a photo ... and maybe put him back in the river and let him continue his journey,\" she said." },
C:   { id="4278714098876681700"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/mdma-drug-bust-queensland-sydney-syndicate-netherlands/100106406"^^tt:url, title="Two Sydney men arrested and extradited to Brisbane over $300 million MDMA drug bust", date=new Date("2021-04-29T23:48:45.000Z"), source="Australian Broadcasting Corporation", author="By Lia Walsh", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714098876681964.mp3"^^tt:url, content="Two Sydney men accused of being part of a criminal syndicate linked to an alleged plot to import more than 850 kilograms of MDMA into the state in 2019 have appeared in court.Tony Spitaleri, 46, and Anthony Squadrito, 19, were arrested in Sydney on Wednesday and extradited to Queensland, both charged with attempting to possess a commercial quantity of border controlled drugs and dealing with the proceeds of crime.Both men appeared briefly in the Brisbane Magistrates Court on Friday morning, where their lawyer made no application for bail.They are accused of being members of an Australian-based criminal syndicate linked to an alleged plot to import the MDMA into Queensland.Police said the amount of MDMA had an estimated street value of $302 million and had the potential to be processed into more than 15 million MDMA tablets in Australia.The matters will return to court next month.The arrests were connected to a major joint international investigation, which originated in the Netherlands in 2019.At that time, the AFP intercepted the drugs at Rotterdam as part of an international police operation.The MDMA was allegedly found in cans of tomatoes in a shipping container.Chemicals had also been allegedly uncovered in barns and residences, hidden behind double walls, double ceilings and double floors.In 2019, a 48-year-old woman from Bass Hill in New South Wales was extradited to Brisbane and charged with attempting to possess a commercial quantity of border controlled drugs.The AFP are holding a press conference this morning in relation to the arrests." },
C:   { id="4278728216371272000"^^com.smartnews:article, link="https://www.truebluela.com/2021/4/29/22410910/brusdar-graterol-injured-list-forearm-tightness-edwin-uceta"^^tt:url, title="Dodgers place Brusdar Graterol on injured list with forearm tightness", date=new Date("2021-04-30T00:56:52.000Z"), source="True Blue LA", author="Eric Stephen", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278728216371272026.mp3"^^tt:url, content="Orlando Ramirez-USA TODAY Sports Brusdar Graterol is the latest Dodgers reliever to be placed on the injured list, placed on the 10-day IL on Thursday with right forearm tightness. Graterol last pitched on Monday against Cincinnati, facing and retiring his only batter faced in the second day of back-to-back outings. In three appearances this season, Graterol has allowed three runs on three hits, with two walks and one strikeout. The right-hander missed the first 15 games of the season on the injured list, though with no injury disclosed by the team. He joins a growing list of Dodgers relievers on the injured list, including Corey Knebel — out for “months” with a lat strain — and David Price — out at least two weeks with a hamstring strain — added in the last week. Tony Gonsolin began the season on the active roster put three games into the year went on the injured list with shoulder inflammation, the same malady that has kept Joe Kelly sidelined all season. Kelly has been pitching at the alternate training site at Camelback Ranch, though he’s at least a week away from returning, if not longer. “Joe, if all went well, is on track to join us at some point soon,” manager Dave Roberts said before Thursday’s game. “On this road trip, I’d say unlikely, but potentially, probably I’d say the earliest is when we get to Anaheim, or possibly on the homestand.” The Dodgers’ current road trip has them in Milwaukee before moving on to Wrigley Field for three games beginning on Monday. The Dodgers play the Angels beginning Friday, May 7 in Anaheim, and the next homestand starts on Tuesday, May 11. Tommy Kahnle and Caleb Ferguson are also on the 60-day injured list, both expected out all season while recovering from Tommy John surgery. The Dodgers recalled Edwin Uceta to take Graterol’s place on the active roster. If Uceta gets in a game, it would be his major league debut. Uceta will wear number 92. The club currently has 14 pitchers on the active roster, plus left-hander Alex Vesia on the trip as part of the taxi squad. Friday will be a bullpen game for the Dodgers, to give the starting rotation an extra day of rest in the midst of a stretch of 14 games in 14 days." }
C: ]]
C: #[count=50]
C: #[more=true];
A: Here are the news.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_many;
U: what's the weather in rome tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast(location=new Location("rome"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.smartnews.article()
C: #[results=[
C:   { id="4278714058527478000"^^com.smartnews:article, link="https://mmajunkie.usatoday.com/2021/04/2021-pfl-2-video-antonio-carlos-junior-submission-tom-lawlor"^^tt:url, title="2021 PFL 2 video: Antonio Carlos Junior submits Tom Lawlor in first", date=new Date("2021-04-29T23:30:55.000Z"), source="MMA Junkie", author="MMA Junkie Staff", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714058527478015.mp3"^^tt:url, content="Tom Lawlor looked like he might give Antonio Carlos Junior some fits early in their Thursday fight. Then Junior (11-5) turned the table on Lawlor (10-8) and submitted him with 17 seconds left in the first round of their light heavyweight bout at 2021 PFL 2. Lawlor was able to work for a guillotine choke from his back in the first round, and it appeared to be tight – but not tight enough to have the Brazilian in too much trouble. After Junior got his head out, he was able to pass to full mount. In mount, Junior worked for an arm-triangle choke, and when that wasn’t there, he jumped for a guillotine choke while nearly letting Lawlor back to his feet. It didn’t take long for Lawlor to tap, giving Junior a key six points in the light heavyweight season standings. Check out Junior’s finish in the video below from Ocean Casino Resort in Atlantic City, N.J. FIRST ROUND FINISH FOR SHOEFACE! He moves on with 6 points in the light heavyweight standings!#2021PFL2 pic.twitter.com/Y6gE82ympS — PFL (@PFLMMA) April 29, 2021" },
C:   { id="4278713729345916400"^^com.smartnews:article, link="https://www.audacy.com/wben/local-sports/bills/nfl-draft-live-grades-and-analysis-for-every-1st-round-pick"^^tt:url, title="2021 NFL Draft: Live grades and analysis for all 32 first round picks", date=new Date("2021-04-29T23:58:00.000Z"), source="Audacy", author="Jesse Pantuosco", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713729345916591.mp3"^^tt:url, content="The 2021 NFL Draft, in all its three-day glory, is finally upon us.The road to Thursday night’s highly-anticipated opening round in Cleveland, Ohio was paved by the usual assortment of fiercely debated mock drafts, elaborate smokescreens orchestrated by front-office mayhem-seekers like diabolical San Francisco 49ers general manager John Lynch (and his equally anarchic partner in crime, Kyle Shanahan, who may or may not be plotting Jimmy Garoppolo’s assassination), obsessive film study and contentious Twitter threads arguing everything from DeVonta Smith’s weight to the health of Zach Wilson’s shoulder.The internet rumor mill has churned out some doozies this draft season, but after weeks — if not months — of desperate truth-seeking, the guessing game is over. No more hiding in the shadows — judgment day is here and it’s time for teams to show us their cards once and for all.Keep it here all night for instant analysis and live grades for each first round pick, beginning with the Jacksonville Jaguars at No. 1 overall.1.) Jacksonville Jaguars:Grade: 2.) New York Jets: Grade:3.) San Francisco 49ers:Grade:4.) Atlanta Falcons:Grade:5.) Cincinnati Bengals:Grade:6.) Miami DolphinsGrade:7.) Detroit LionsGrade:8.) Carolina Panthers:Grade:9.) Denver Broncos:Grade:10.) Dallas CowboysGrade:11.) New York Giants:Grade:12.) Philadelphia Eagles: Grade:13.) Los Angeles Chargers:Grade:14.) Minnesota Vikings:Grade:15.) New England Patriots:Grade:16.) Arizona Cardinals:Grade:17.) Las Vegas Raiders:Grade:18.) Miami Dolphins:Grade:19.) Washington Football Team: Grade:20.) Chicago Bears:Grade:21.) Indianapolis Colts:Grade:22.) Tennessee Titans:Grade:23.) New York Jets:Grade:24.) Pittsburgh Steelers:Grade:25.) Jacksonville Jaguars: Grade:26.) Cleveland Browns:Grade:27.) Baltimore Ravens:Grade:28.) New Orleans Saints: Grade:29.) Green Bay Packers: Grade:***30.) Buffalo Bills: Grade:31.) Baltimore Ravens:Grade:32.) Tampa Bay Buccaneers: Grade:LISTEN on the Audacy AppSign Up and Follow Audacy SportsFacebook | Twitter | Instagram" },
C:   { id="4278714242246382000"^^com.smartnews:article, link="https://www.baltimoresun.com/business/bs-bz-domino-resumes-operations-20210429-rvsvgiluzvdzvi2vjgnsy4oxe4-story.html"^^tt:url, title="Domino Sugar resumes full operations eight days after fire at Baltimore refinery", date=new Date("2021-04-30T00:00:00.000Z"), source="Baltimore Sun", author="Colin Campbell, Baltimore Sun", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714242246381851.mp3"^^tt:url, content="Smoke billows from a fire at the Domino Sugar factory in Baltimore. | Baltimore Sun The 99-year-old Domino Sugar refinery in Baltimore resumed full operations Wednesday after a fire burned down a giant on-site raw sugar shed, causing eight days of downtime to parts of its processes, the refinery’s owner announced. Mickey Seither, senior vice president of operations for American Sugar Refining Inc., Domino’s parent company, said the refinery’s return to full operations in just over a week “is a credit to our expert team of engineers and our more than 500 employees who have been working around the clock.” “We want to again express our gratitude to our employees, not only in Baltimore but across our network of facilities, and the Baltimore City Fire Department for their quick response, which spared the refinery itself from any damage,” Seither said in a statement. The refinery, which is replacing its neon, rooftop sign with an LED replica, resumed partial operations two days after the fire on the afternoon of April 20. Those included processing the sugar already inside the facility and packaging and shipping retail and bulk products, the company said. While the main raw sugar storage shed collapsed in the fire, the refinery has restored use to a secondary raw sugar shed on its property, the company said." },
C:   { id="4278713752284565500"^^com.smartnews:article, link="https://www.audacy.com/973thefansd/sports/san-diego-state-aztecs/trey-pulliam-on-with-john-kentera"^^tt:url, title="Trey Pulliam on with John Kentera", date=new Date("2021-04-29T23:47:32.000Z"), source="Audacy", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713752284565711.mp3"^^tt:url, content="San Diego State Aztecs Men's Basketball Guard Trey Pulliam joined the John Kentera Show on Thursday.Pulliam talked about growing up in Texas by Texas A&M and what his journey was like in basketball at a young age.Later on, Pulliam discusses how he bounced around junior colleges in Texas after attending a prep school out of high school before finally landing at San Diego State.Pulliam also talks about his decision to return to San Diego State and what he plans on improving on during the offseason." },
C:   { id="4278713824070078500"^^com.smartnews:article, link="https://people.com/movies/david-cronenbergs-new-film-crimes-of-the-future-to-star-viggo-mortensen-kristen-stewart-lea-seydoux/"^^tt:url, title="David Cronenberg’s Crimes of the Future to Star Viggo Mortensen, Kristen Stewart & Léa Seydoux: Report", date=new Date("2021-04-30T00:00:11.000Z"), source="People", author="<a href=\"https://people.com/author/salina-tsegai/\">Salina Tsegai</a>", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713824070078688.mp3"^^tt:url, content="Matt Winkelmeyer/Getty; Daniele Venturelli/WireImage; Mike Marsland/WireImage David Cronenberg's latest upcoming sci-fi movie is inspired by his 1970 film of the same name and boasts an impressive cast. According to Deadline, The Fly director's new film Crimes of the Future will start filming in Athens, Greece this summer and will star Viggo Mortensen, Kristen Stewart and Léa Seydoux. This is the first original screenplay written by Cronenberg since his 1999 sci-fi thriller eXistenZ, and his last film Map of the Stars came out seven years ago. RELATED: Viggo Mortensen Makes Directorial Debut with Deeply Personal Family Drama Falling: Watch the Trailer Crimes of the Future's logline reads: \"The film takes a deep dive into the not-so-distant future where humankind is learning to adapt to its synthetic surroundings. \"This evolution moves humans beyond their natural state and into a metamorphosis, altering their biological makeup. While some embrace the limitless potential of transhumanism, others attempt to police it,\" the logline continues. \"Either way, in this perfectly crafted Cronenberg world, which marks the iconic filmmaker's return to sci-fi, 'Accelerated Evolution Syndrome', is spreading fast.\" The movie centers around Saul Tenser, \"a beloved performance artist who has embraced Accelerated Evolution Syndrome, sprouting new and unexpected organs in his body.\" \"Along with his partner Caprice, Tenser has turned the removal of these organs into a spectacle for his loyal followers to marvel at in real time theatre,\" the longline adds. \"But with both the government and a strange subculture taking note, Tenser is forced to consider what would be his most shocking performance of all.\" RELATED: Kristen Stewart as Princess Diana Seen with Onscreen Sons William and Harry \"I have unfinished business with the future,\" Cronenberg said about his newest project. Robert Lantos, Cronenberg's four-time collaborator, will produce the Neon and Serendipity Point Films project. \"To work with David Cronenberg is to embark on a journey exploring terrain where no one has gone before,\" said Lantos. \"Each of our collaborations has been an exhilarating adventure and David's unwavering vision is what real cinema is all about.\" Scott Speedman, Welket Bungué, Don McKellar and Lihi Kornowski are also set to star in the film, which begins filming in August." },
C:   { id="4278714224651283000"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/kyrgyzstan-tajikistan-cross-border-shelling-in-water-dispute/100106108"^^tt:url, title="Six civilians are dead as Kyrgyz and Tajik security forces clash at border in water dispute", date=new Date("2021-04-29T23:49:53.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714224651283022.mp3"^^tt:url, content="At least six civilians are dead and dozens wounded after security forces from Kyrgyzstan and Tajikistan exchanged fire across the border over a water reservoir.Residents also hurled rocks at each other in the clash over the resource.The frontier, dating to the Soviet era, is poorly demarcated and minor border disputes are frequent.The latest quarrel quickly escalated as border guards on both sides joined the fighting on Thursday local time.After hours of talks, the two countries agreed to a ceasefire and troops pulled back.But by 1:00am on Friday, Kyrgyz police reported a renewal of gunfire on the Tajikistan border.More than 800 Kyrgyz residents were evacuated from several villages engulfed by the clashes.A Kyrgyz government source said the country's capital, Bishkek, feared it could permanently lose part of its territory after temporarily abandoning it.Kyrgyzstan reported three civilians had been killed and 81 people, including at least two soldiers, were wounded.In Tajikistan, the mayor's office in the nearby city of Isfara said three Tajiks died and 31 were injured, including the mayor who received a gunshot wound, the RIA-Novosti news agency reported.Both sides trade blame for cross-border shellingClashes began late on Wednesday along the frontier between Tajikistan's northern Sughd province and Kyrgyzstan's southern Batken province because of a dispute over a reservoir and pumping station, claimed by both sides, on the Isfara river.Residents on both sides threw rocks at each other before the fighting escalated when both sides began exchanging gunfire on Thursday, according to the security agencies of both countries.Kyrgyzstan's State National Security Committee accused the Tajik side of using mortars to shell the disputed water facility.Tajik authorities said the facility belonged to them and accused Kyrgyz forces of shooting at Tajik border guards.A large part of the Tajik-Kyrgyz border has remained unmarked, fueling fierce disputes over water, land and pastures.Kyrgyz and Tajik delegations have held several rounds of talks in recent years but have failed to end the border controversy.ABC/wires" },
C:   { id="4278713691228082000"^^com.smartnews:article, link="https://www.rawstory.com/andrew-giuliani/"^^tt:url, title="WATCH: CNN's Erin Burnett humiliates Rudy Giuliani's son as he tries to attack FBI investigation of his dad", date=new Date("2021-04-29T23:57:15.000Z"), source="Raw Story", author="Matthew Chapman", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278713691228082370.mp3"^^tt:url, content="On CNN Thursday evening, Rudy Giuliani's son Andrew went on \"Erin Burnett OutFront\" to defend his father and slam the federal investigation into his Ukraine work as a political hit job — only to crash and burn spectacularly on national television.\"The thing is, though, to get the warrant, it takes a lot,\" said Burnett.\"Who signed the warrant? A judge. Who appointed the judge? Barack Obama,\" said Giuliani. \"Since Eric Holder became attorney general, we have seen the Justice Department get politicized ... no other judge would sign this warrant.\"\"You have any proof no other judge would sign the warrant?\" asked Burnett.\"I don't have proof, but do you have any proof that any other judge would sign the warrant?\" demanded Giuliani.After a long detour in which the younger Giuliani tried to steer the conversation to conspiracy theories about Hunter Biden, Burnett cornered him again on his baseless allegations the investigation is politically motivated.\"Let me ask you something important about your claims of political motivation,\" said Burnett. \"President Biden was asked about it today.\" She played the clip of Biden saying he had no advance knowledge of the raid on the elder Giuliani's home and office. \"Do you have any reason to not take him at his word, Andrew? ... I'll just make the point again that his son's under investigation and he's done nothing to stop it.\"\"So you don't think he actually has the motive to intervene in that investigation?\" insisted Giuliani.\"He may, but he hasn't done it,\" shot back Burnett.Watch below: Burnett: You need probably cause to get a warrant A. Giuliani: Only a corrupt Obama judge would sign it. No other j... https://t.co/mU7Mr7gTWU— Andrew Feinberg (@AndrewFeinberg) 1619738538.0 EB: President Biden says he didn't know that SDNY was going to serve a search warrant on your dad. Do you have any... https://t.co/DUhERW1Wnj— Andrew Feinberg (@AndrewFeinberg) 1619739221.0" },
C:   { id="4278714184415324700"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/bruce-the-flood-duck/100096252"^^tt:url, title="Have you seen Bruce? Rubber duck released down the Barwon River goes missing", date=new Date("2021-04-29T23:49:53.000Z"), source="Australian Broadcasting Corporation", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714184415324746.mp3"^^tt:url, content="It started out as a joke and ended up with a bright yellow rubber duck being sent down the flooded Barwon River in northern New South Wales.Mungindi resident Tracey Neilsen said the idea for Bruce the Mungindi Flood Duck came to her to cheer up her nephew who has autism and was doing it tough during the floods earlier this month.\"The idea was to drop a duck in the river and see how far it goes,\" Ms Nielsen said.Ms Neilsen said her nephew, three-year-old Dallas Jones, had struggled with the disruptions caused by the flooding after his family was forced to evacuate their rural property and staying with her in town temporarily.\"I thought it would bring a lot of joy to people because, like in Mungindi itself and the rest of down below us, we've had fires, drought, plague, and now floods. I think it would be something different,\" she said.\"It would float past the house and they would see it because their house is right on the river.\"It would bring a smile to everybody's face, especially for kids to see this giant duck floating down the river.\"And then it kind of just escalated from there.\"Tour of the townIn a small town like Mungindi word gets around, and Bruce quickly took on celebrity status.Before setting off on its riverine adventure on April 10, Bruce was taken around the town and had its photo taken with State Emergency Service volunteers, police, and ambulance officers.Queensland Police Service Senior Constable Curtis Jope said everyone was happy to get behind Bruce.\"We're a pretty small town out here at Mungindi, but the community always gets behind initiatives like this, especially to make a young boy with autism happy,\" he said.\"I'm very proud of the town that I work in and there's some really good people in this town.\"Where's Bruce?The only problem is Bruce has gone AWOL.The rubber duck missed its scheduled float past Dallas Jones' house and, despite their best efforts, Ms Nielsen said they had not spotted or been able to find Bruce.But they are confident Bruce is still bobbing along on its southward escape route.\"I'm hoping it passed them during the night and it's heading to Melbourne,\" she said.The border town — split between Queensland and NSW — has had a rough time when it lost its only supermarket and butcher in a massive fire last September.The destruction compounded weeks of stress over COVID-19 border restrictions that cut the community off from key services.The recent flooding has boosted morale though, with many hoping the floodwaters will lead to a good year for the region's farmers.For Tracey Nielsen, she hopes Bruce — with its fixed smile and smart black bow tie — can help spread some of the cheer from Mungindi as it makes its way down the river system.\"I'm also hoping if it gets stuck, someone would see it and pick him up, take a photo ... and maybe put him back in the river and let him continue his journey,\" she said." },
C:   { id="4278714098876681700"^^com.smartnews:article, link="https://www.abc.net.au/news/2021-04-30/mdma-drug-bust-queensland-sydney-syndicate-netherlands/100106406"^^tt:url, title="Two Sydney men arrested and extradited to Brisbane over $300 million MDMA drug bust", date=new Date("2021-04-29T23:48:45.000Z"), source="Australian Broadcasting Corporation", author="By Lia Walsh", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278714098876681964.mp3"^^tt:url, content="Two Sydney men accused of being part of a criminal syndicate linked to an alleged plot to import more than 850 kilograms of MDMA into the state in 2019 have appeared in court.Tony Spitaleri, 46, and Anthony Squadrito, 19, were arrested in Sydney on Wednesday and extradited to Queensland, both charged with attempting to possess a commercial quantity of border controlled drugs and dealing with the proceeds of crime.Both men appeared briefly in the Brisbane Magistrates Court on Friday morning, where their lawyer made no application for bail.They are accused of being members of an Australian-based criminal syndicate linked to an alleged plot to import the MDMA into Queensland.Police said the amount of MDMA had an estimated street value of $302 million and had the potential to be processed into more than 15 million MDMA tablets in Australia.The matters will return to court next month.The arrests were connected to a major joint international investigation, which originated in the Netherlands in 2019.At that time, the AFP intercepted the drugs at Rotterdam as part of an international police operation.The MDMA was allegedly found in cans of tomatoes in a shipping container.Chemicals had also been allegedly uncovered in barns and residences, hidden behind double walls, double ceilings and double floors.In 2019, a 48-year-old woman from Bass Hill in New South Wales was extradited to Brisbane and charged with attempting to possess a commercial quantity of border controlled drugs.The AFP are holding a press conference this morning in relation to the arrests." },
C:   { id="4278728216371272000"^^com.smartnews:article, link="https://www.truebluela.com/2021/4/29/22410910/brusdar-graterol-injured-list-forearm-tightness-edwin-uceta"^^tt:url, title="Dodgers place Brusdar Graterol on injured list with forearm tightness", date=new Date("2021-04-30T00:56:52.000Z"), source="True Blue LA", author="Eric Stephen", audio_url="https://oval-project.s3-ap-northeast-1.amazonaws.com/data/210430/voice/summary_4278728216371272026.mp3"^^tt:url, content="Orlando Ramirez-USA TODAY Sports Brusdar Graterol is the latest Dodgers reliever to be placed on the injured list, placed on the 10-day IL on Thursday with right forearm tightness. Graterol last pitched on Monday against Cincinnati, facing and retiring his only batter faced in the second day of back-to-back outings. In three appearances this season, Graterol has allowed three runs on three hits, with two walks and one strikeout. The right-hander missed the first 15 games of the season on the injured list, though with no injury disclosed by the team. He joins a growing list of Dodgers relievers on the injured list, including Corey Knebel — out for “months” with a lat strain — and David Price — out at least two weeks with a hamstring strain — added in the last week. Tony Gonsolin began the season on the active roster put three games into the year went on the injured list with shoulder inflammation, the same malady that has kept Joe Kelly sidelined all season. Kelly has been pitching at the alternate training site at Camelback Ranch, though he’s at least a week away from returning, if not longer. “Joe, if all went well, is on track to join us at some point soon,” manager Dave Roberts said before Thursday’s game. “On this road trip, I’d say unlikely, but potentially, probably I’d say the earliest is when we get to Anaheim, or possibly on the homestand.” The Dodgers’ current road trip has them in Milwaukee before moving on to Wrigley Field for three games beginning on Monday. The Dodgers play the Angels beginning Friday, May 7 in Anaheim, and the next homestand starts on Tuesday, May 11. Tommy Kahnle and Caleb Ferguson are also on the 60-day injured list, both expected out all season while recovering from Tommy John surgery. The Dodgers recalled Edwin Uceta to take Graterol’s place on the active roster. If Uceta gets in a game, it would be his major league debut. Uceta will wear number 92. The club currently has 14 pitchers on the active roster, plus left-hander Alex Vesia on the trip as part of the taxi squad. Friday will be a bullpen game for the Dodgers, to give the starting rotation an extra day of rest in the midst of a stretch of 14 games in 14 days." }
C: ]]
C: #[count=50]
C: #[more=true];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(43.2128473, -75.4557304, "Rome, City of Rome"))
C: #[results=[
C:   { temperature=5.3C, wind_speed=4.7mps, humidity=43.7, cloudiness=9.4, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-05-01T14:00:00.000Z"), location=new Location(43.2128473, -75.4557304, "Rome, City of Rome") }
C: ]];
A: It will be sunny tomorrow at 7:00 AM in Rome, City of Rome and the temperature will be 41.5 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: set the temperature unit to celsius
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=enum celsius);
====
# recording/34d1a3141e71e53ace2a21334e02ec23
U: set the language to spanish
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_language(language=null^^tt:iso_lang_code("spanish"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_language(language="es"^^tt:iso_lang_code("Spanish"))
C: #[results=[]]
C: #[error=enum unsupported_platform_cloud];
A: Sorry, you need to go to the user profile page to change the language.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: show me a dog picture
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.thedogapi.dog();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.set_language(language="es"^^tt:iso_lang_code("Spanish"))
C: #[results=[]]
C: #[error=enum unsupported_platform_cloud];
C: @com.thedogapi.dog()
C: #[results=[
C:   { id="TXXuNa4by"^^com.thedogapi:dog("Unknown breed"), picture_url="https://cdn2.thedogapi.com/images/TXXuNa4by.jpg"^^tt:picture }
C: ]];
A: Here is a picture of a Unknown breed.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: show me a picture of an almond
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.bing.image_search(query="almond");
====
# recording/f8aef93e66b7957d64f4f9664f507946
U: tell about the weather in Genova, Italy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current(location=new Location("genova , italy"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(8, 46, 12) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_date()
C: #[results=[
C:   { date=new Date("2021-04-30T00:00:00.812Z") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(44.40726, 8.9338624, "Genoa, Liguria"))
C: #[results=[
C:   { temperature=14.3C, wind_speed=3.4mps, humidity=95.6, cloudiness=100, fog=7, status=enum raining, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=9;content_type=image/png"^^tt:picture, location=new Location(44.40726, 8.9338624, "Genoa, Liguria") }
C: ]];
A: It is raining today in Genoa, Liguria and the temperature is 57.7 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what day is today?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_date();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.builtin.thingengine.builtin.get_time()
C: #[results=[
C:   { time=new Time(8, 46, 12) }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_date()
C: #[results=[
C:   { date=new Date("2021-04-30T00:00:00.812Z") }
C: ]];
C: @org.thingpedia.weather.current(location=new Location(44.40726, 8.9338624, "Genoa, Liguria"))
C: #[results=[
C:   { temperature=14.3C, wind_speed=3.4mps, humidity=95.6, cloudiness=100, fog=7, status=enum raining, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=9;content_type=image/png"^^tt:picture, location=new Location(44.40726, 8.9338624, "Genoa, Liguria") }
C: ]];
C: @org.thingpedia.builtin.thingengine.builtin.get_date()
C: #[results=[
C:   { date=new Date("2021-04-30T00:00:00.730Z") }
C: ]];
A: Today is April 30.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: Who are your creators?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity);
====
# recording/90a50a1078390e8d747cf1238ba17d2f
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/a0d98f0449e864c091ae904bd6f8097a
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/7dbccc32973ad07f3d0ff6b03ce3c2b6
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/fe463257269792171d41a0484484ecc1
U: bya
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/515163de5dbcfa5b6744976b37832b26
U: bye
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/b27bc4f8384a464f4104f0f398f6d04c
U: hi
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
C: $dialogue @org.thingpedia.dialogue.transaction.greet;
A: Hello, what can I do for you?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_greet;
U: no
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/3d95964b31183cf876918895bcb1cc4a
U: hey
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# recording/44b1ad70419de09a5891dc317f327358
U: hey
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/8969
U: turn on the lights when i get home
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == $location.home => @org.thingpedia.iot.light-bulb.set_power(power=enum on);
====
# log-dev/9016
U: 你 好
UT: $dialogue @org.thingpedia.dialogue.transaction.greet;
====
# log-dev/1519
U: oh stop
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# log/54338
U: open the window if smoke is detected
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.smoke.state()) filter state == enum detecting => @org.thingpedia.iot.cover(name="window").set_openclose(state=enum open);
====
# recording/cce30ec414554394e63f9ac3b6c25f76
U: play baba riley by the who
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("the who")) && id =~ "baba riley" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:67ea9eGLXYMsO2eYQRui3w"^^org.thingpedia.media-source:artist("The Who")) && id =~ "baba riley")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Baba O'Riley on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:67ea9eGLXYMsO2eYQRui3w"^^org.thingpedia.media-source:artist("The Who")) && id =~ "baba riley")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:67ea9eGLXYMsO2eYQRui3w"^^org.thingpedia.media-source:artist("The Who")) && id =~ "baba riley")[1] => @org.thingpedia.media-player(id="org.thingpedia.media-player-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { device="XXXXXXXX"^^org.thingpedia.media-player:device, playable="spotify:track:3qiyyUfYe7CRYLucrPmulD"^^org.thingpedia.media-source:playable("Baba O'Riley"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play the who
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("the who")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/8d1d57109d0565e79262c53b2a3a7702
U: can you tell me a good japanese restaurant
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.yelp.restaurant() filter contains(cuisines, null^^com.yelp:restaurant_cuisine("japanese"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.yelp.restaurant() filter contains(cuisines, "japanese"^^com.yelp:restaurant_cuisine("Japanese"))
C: #[results=[
C:   { id="APcouAOJlP0sdKZU3Ev_7w"^^com.yelp:restaurant("Odori Japanese Cuisine"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/fpIf_fClDVr8MFD8268AyQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/odori-japanese-cuisine-palo-alto-4?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum moderate, rating=3.5, review_count=612, geo=new Location(37.4270973205566, -122.14794921875, "2111 El Camino Real, Palo Alto, CA 94306"), phone="+16503272222"^^tt:phone_number },
C:   { id="AUktvLJ9j7gANenwNga1fg"^^com.yelp:restaurant("Taro San Japanese Noodle Bar"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/89qobB8Zp7uNq4_p3Zw01Q/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/taro-san-japanese-noodle-bar-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "noodles"^^com.yelp:restaurant_cuisine("Noodles"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum moderate, rating=3.5, review_count=660, geo=new Location(37.4429175780446, -122.172707300397, "717 Stanford Shopping Ctr, Palo Alto, CA 94304"), phone="+16508152700"^^tt:phone_number },
C:   { id="LEp5w5lF3AD2UGRfolFoDQ"^^com.yelp:restaurant("YAYOI"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/ebhtMam6i1HBJl83qaY4UQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/yayoi-palo-alto-3?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum moderate, rating=3.5, review_count=634, geo=new Location(37.44737, -122.16052, "403 University Ave, Palo Alto, CA 94301"), phone="+16504944437"^^tt:phone_number },
C:   { id="xNNURK1vIGEDqwVb9pFRlg"^^com.yelp:restaurant("Go Fish Poke Bar"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/GCbABrUn_UArevjk--lwUg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/go-fish-poke-bar-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum moderate, rating=4, review_count=348, geo=new Location(37.4427026586894, -122.170617845337, "660 Stanford Shopping Ctr, Ste 244B, Palo Alto, CA 94304"), phone="+16503281370"^^tt:phone_number },
C:   { id="WAo42c41_0Y0tifXbwuo8w"^^com.yelp:restaurant("Fuki Sushi"), image_url="https://s3-media2.fl.yelpcdn.com/bphoto/K84YCh7eNy0fxkUSLmVzyg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/fuki-sushi-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "japanese"^^com.yelp:restaurant_cuisine("Japanese")], price=enum expensive, rating=3.5, review_count=887, geo=new Location(37.4138844, -122.125805, "4119 El Camino Real, Palo Alto, CA 94306"), phone="+16504949383"^^tt:phone_number },
C:   { id="hvB8fOsqPmVAFFrnmAMz_w"^^com.yelp:restaurant("Daigo"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/MmFuZOxqQs---nLw7izPGQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/daigo-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "japanese"^^com.yelp:restaurant_cuisine("Japanese")], price=enum moderate, rating=4, review_count=152, geo=new Location(37.4278, -122.14425, "2363 Birch St, Ste B, Palo Alto, CA 94306"), phone="+16503846880"^^tt:phone_number },
C:   { id="xcUJ7qlO60Cu-ZyCaD-23Q"^^com.yelp:restaurant("Jin Sho"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/kdCwUep8tyRy6xatkgoivg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/jin-sho-palo-alto-2?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese"), "asianfusion"^^com.yelp:restaurant_cuisine("Asian Fusion"), "sushi"^^com.yelp:restaurant_cuisine("Sushi Bars")], price=enum expensive, rating=3.5, review_count=556, geo=new Location(37.42596, -122.14555, "454 S California Ave, Palo Alto, CA 94306"), phone="+16503213454"^^tt:phone_number },
C:   { id="arrdif21CgXnCliP_Kcnjw"^^com.yelp:restaurant("Onigilly Palo Alto"), image_url="https://s3-media1.fl.yelpcdn.com/bphoto/ji-6Mbvur2YPPQ4XSFBwKg/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/onigilly-palo-alto-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["japanese"^^com.yelp:restaurant_cuisine("Japanese")], price=enum cheap, rating=4, review_count=272, geo=new Location(37.44408, -122.16296, "164 University Ave, Palo Alto, CA 94301"), phone="+16503132104"^^tt:phone_number },
C:   { id="64ClD5HpRafRXjQ79w0SYw"^^com.yelp:restaurant("Nobu Palo Alto"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/JYWEZlLP6ZLWAzVsgQRFKQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/nobu-palo-alto-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "japanese"^^com.yelp:restaurant_cuisine("Japanese"), "breakfast_brunch"^^com.yelp:restaurant_cuisine("Breakfast & Brunch")], price=enum luxury, rating=3.5, review_count=464, geo=new Location(37.4436, -122.16152, "180 Hamilton Ave, Palo Alto, CA 94301"), phone="+16507988396"^^tt:phone_number },
C:   { id="JnLNfQtW9GLGRF1pzAd55w"^^com.yelp:restaurant("Sushi House"), image_url="https://s3-media3.fl.yelpcdn.com/bphoto/6fbc1tdrD1tFqjYb6SM8tQ/o.jpg"^^tt:picture, link="https://www.yelp.com/biz/sushi-house-palo-alto?adjust_creative=hejPBQRox5iXtqGPiDw4dg&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_search&utm_source=hejPBQRox5iXtqGPiDw4dg"^^tt:url, cuisines=["sushi"^^com.yelp:restaurant_cuisine("Sushi Bars"), "noodles"^^com.yelp:restaurant_cuisine("Noodles"), "japanese"^^com.yelp:restaurant_cuisine("Japanese")], price=enum moderate, rating=3.5, review_count=272, geo=new Location(37.4392332, -122.1582318, "855 El Camino Real, Ste 158, Palo Alto, CA 94301"), phone="+16503213453"^^tt:phone_number }
C: ]]
C: #[count=41];
A: I see Odori Japanese Cuisine, Taro San Japanese Noodle Bar, and YAYOI. They're moderate restaurants rated 3.5 star.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_three;
U: can you remind me to take a break every hour?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: timer(interval=1h) => @org.thingpedia.builtin.thingengine.builtin.say(message="to take a break");
====
# recording/27711928e6877e21a458a66df951e6ad
U: find me the box by roddy ricch
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("roddy ricch")) && id =~ "box";
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="scUvsrORKe"^^com.icanhazdadjoke:id, text="I asked a frenchman if he played video games. He said \"Wii\"" }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:757aE44tKEUQEqRuT6GnEB"^^org.thingpedia.media-source:artist("Roddy Ricch")) && id =~ "box"
C: #[results=[
C:   { id="spotify:track:0nbXyq5TXYPCO7pr3N8S4I"^^org.thingpedia.media-source:playable("The Box"), artists=["spotify:artist:757aE44tKEUQEqRuT6GnEB"^^org.thingpedia.media-source:artist("Roddy Ricch")], release_date=new Date("2019-12-06T00:00:00.000Z"), popularity=86, genres=["melodic rap", "rap", "trap"], __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I see The Box. It is a music by Roddy Ricch released in December 5, 2019. Would you like to play it on Spotify?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable="spotify:track:0nbXyq5TXYPCO7pr3N8S4I"^^org.thingpedia.media-source:playable("The Box"))
AT: #[confirm=enum proposed];
U: no
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/6072b83f41172d1d6037fac46c9d7cfa
U: Tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="rHBQuXLR7h"^^com.icanhazdadjoke:id, text="Why did the cookie cry?\r\nBecause his mother was a wafer so long" }
C: ]];
A: Why did the cookie cry? Because his mother was a wafer so long.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/8c3f690481829cc911ced381be36211b
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=19.4C, wind_speed=1mps, humidity=61.5, cloudiness=24.2, fog=0, status=enum cloudy, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=2;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="4ElyszXDdxc"^^com.icanhazdadjoke:id, text="I went to the store to pick up eight cans of sprite... when I got home I realized I'd only picked seven up" }
C: ]];
A: I went to the store to pick up eight cans of sprite... When I got home I realized I'd only picked seven up.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/d737337e6e4c20088d9f7fe699f1d249
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
A: It is sunny today in Palo Alto, California and the temperature is 77.4 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.weather.current(location=new Location(37.4443293, -122.1598465, "Palo Alto, California"))
C: #[results=[
C:   { temperature=25.2C, wind_speed=2.7mps, humidity=43.7, cloudiness=11.7, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, location=new Location(37.4443293, -122.1598465, "Palo Alto, California") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="e2obFd2oOf"^^com.icanhazdadjoke:id, text="I thought about going on an all-almond diet. But that's just nuts." }
C: ]];
A: I thought about going on an all-almond diet. But that's just nuts.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: what's the weather
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.current();
====
# recording/0bb13fec6883d24eb63b9ad21da456cf
U: play the cure on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/f10e847df303ac51cad43c95c11495c6
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/c1d705a075ab4d3224b953ee43a93757
U: Play Bruce Springsteen.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("bruce springsteen")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3eqjTLE0HfPfh78zjh6TqT"^^org.thingpedia.media-source:artist("Bruce Springsteen")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0dOg1ySSI7NkpAe89Zo0b9"^^org.thingpedia.media-source:playable("Born in the U.S.A."), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7FwBtcecmlpc1sLySPXeGE"^^org.thingpedia.media-source:playable("Dancing In the Dark"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:6hTcuIQa0sxrrByu9wTD7s"^^org.thingpedia.media-source:playable("Born to Run"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:2Y90nL1ohB4sgYELDs7uNx"^^org.thingpedia.media-source:playable("Glory Days"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3PzsbWSQdLCKDLxn7YZfkM"^^org.thingpedia.media-source:playable("I'm On Fire"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:56lhDZNQ5J47aog6mGKeGk"^^org.thingpedia.media-source:playable("Thunder Road"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1KsI8NEeAna8ZIdojI3FiT"^^org.thingpedia.media-source:playable("Hungry Heart"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3fbnbn6A5O5RNb08tlUEgd"^^org.thingpedia.media-source:playable("Streets of Philadelphia - Single Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:68uuz61IqrSJjO6ffO3yHc"^^org.thingpedia.media-source:playable("Secret Garden"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7HrzErXq3TsKOY1gmdIShB"^^org.thingpedia.media-source:playable("The River"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music by Bruce Springsteen on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: Play The Beatles.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("beatles")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3eqjTLE0HfPfh78zjh6TqT"^^org.thingpedia.media-source:artist("Bruce Springsteen")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0dOg1ySSI7NkpAe89Zo0b9"^^org.thingpedia.media-source:playable("Born in the U.S.A."), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7FwBtcecmlpc1sLySPXeGE"^^org.thingpedia.media-source:playable("Dancing In the Dark"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:6hTcuIQa0sxrrByu9wTD7s"^^org.thingpedia.media-source:playable("Born to Run"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:2Y90nL1ohB4sgYELDs7uNx"^^org.thingpedia.media-source:playable("Glory Days"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3PzsbWSQdLCKDLxn7YZfkM"^^org.thingpedia.media-source:playable("I'm On Fire"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:56lhDZNQ5J47aog6mGKeGk"^^org.thingpedia.media-source:playable("Thunder Road"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1KsI8NEeAna8ZIdojI3FiT"^^org.thingpedia.media-source:playable("Hungry Heart"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3fbnbn6A5O5RNb08tlUEgd"^^org.thingpedia.media-source:playable("Streets of Philadelphia - Single Edit"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:68uuz61IqrSJjO6ffO3yHc"^^org.thingpedia.media-source:playable("Secret Garden"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7HrzErXq3TsKOY1gmdIShB"^^org.thingpedia.media-source:playable("The River"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^org.thingpedia.media-source:artist("The Beatles")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:6dGnYIeXmHdcikdzNNDMm2"^^org.thingpedia.media-source:playable("Here Comes The Sun - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:2EqlS6tkEnglzr7tkKAAYD"^^org.thingpedia.media-source:playable("Come Together - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7iN1s7xHE4ifF5povM6A48"^^org.thingpedia.media-source:playable("Let It Be - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3BQHpFgAp4l80e1XslIjNI"^^org.thingpedia.media-source:playable("Yesterday - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5jgFfDIR6FR0gvlA56Nakr"^^org.thingpedia.media-source:playable("Blackbird - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5ZBeML7Lf3FMEVviTyvi8l"^^org.thingpedia.media-source:playable("Twist And Shout - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0aym2LBJBk9DAYuHHutrIl"^^org.thingpedia.media-source:playable("Hey Jude - Remastered 2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3KfbEIOC7YIv90FIfNSZpo"^^org.thingpedia.media-source:playable("In My Life - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4pbG9SUmWIvsROVLF0zF9s"^^org.thingpedia.media-source:playable("I Want To Hold Your Hand - Remastered 2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3Am0IbOxmvlSXro7N5iSfZ"^^org.thingpedia.media-source:playable("Strawberry Fields Forever - Remastered 2009"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=47];
A: I played music by The Beatles on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play playlist cyn piano
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() filter id =~ "cyn piano" => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
====
# recording/d5976954acf743a41fde079560067438
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/e4d01220cbc89f22384cd2eddcbd7aae
U: add this song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing() => @com.spotify.add_song_to_playlist(song=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
A: What playlist do you want to add to?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_slot_fill(playlist);
AT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(song=id);
U: Z
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).get_currently_playing() => @com.spotify(id="com.spotify-XXXXXXXX"^^tt:device_id).add_song_to_playlist(playlist="z", song=id);
====
# recording/204e96f6f7f6375a663426cb85ccfb98
U: play armchair expert
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "armchair expert" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "armchair expert")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6cprB7E9cUJNu5yaLWw85G"^^org.thingpedia.media-source:playable("Armchair Expert"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Armchair Expert on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play joe rogan podcast
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).show() filter contains(artists, null^^org.thingpedia.media-source:artist("joe rogan")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/a485bad6463afc7da82b38a464667972
U: play chopin
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("chopin")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7y97mc3bZRFXzT2szRM4L4"^^org.thingpedia.media-source:artist("Frédéric Chopin")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2MSgFefjK0T7Iwjvr3OKqV"^^org.thingpedia.media-source:playable("Chopin: Nocturne No. 20 in C-Sharp Minor, Op. Posth."), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2NelosTe0arXp8sdQRfc1B"^^org.thingpedia.media-source:playable("Scherzo No. 3 in C-Sharp Minor, Op. 39, B. 125"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5VT7oTL3YLT43geRPP2LYP"^^org.thingpedia.media-source:playable("Piano Sonata No. 2 in B-Flat Minor, Op. 35: III. Marche funèbre (Lento) (Orchestral Version)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:56FgPusKrAOypfATcunNbB"^^org.thingpedia.media-source:playable("Nocturnes, Op. 9: No. 1, Larghetto in B-Flat Minor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4XZETVhfy6u2ikOFwYcXbD"^^org.thingpedia.media-source:playable("Nocturne No.2 In E Flat, Op.9 No.2"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:18GJzOA39ppNUjqaSSrdpu"^^org.thingpedia.media-source:playable("Nocturnes, Op. 15: No. 2 in F-Sharp Major"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2VkB91yELC0iXDFcCBy5ck"^^org.thingpedia.media-source:playable("Nocturnes, Op. 9: No. 2, Andante in E-Flat Major"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7G1k4wY4k25DBkJZ7BSWJJ"^^org.thingpedia.media-source:playable("Études, Op. 10: No. 3, Étude in E Major \"Tristesse\""), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:38FT6Udxc1ReglJfFqEu1r"^^org.thingpedia.media-source:playable("Impromptu No. 3, Op. 51"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3LNsWJM7YJP3JjZHBFFlnm"^^org.thingpedia.media-source:playable("Nocturne No. 19 in E Minor, Op. 72, No. 1"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=48];
A: I played music by Frédéric Chopin on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
====
# recording/dd6e629c7f68c80815c69097adba3e23
U: play playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playlist() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:4kQovkgBZTd8h2HCM3fF31"^^org.thingpedia.media-source:playable("Grammy Awards 2021"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:4e36iSHdNaSDaIfOKmCvXd"^^org.thingpedia.media-source:playable("2021 HITS VIRAL ? ( Best Hits 2021 & Top Global 2021 Hits) ?"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:37i9dQZF1DWZjqjZMudx9T"^^org.thingpedia.media-source:playable("MANSIÓN REGGAETÓN"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:6Tyhahqm1EJ2IHOytwMYDq"^^org.thingpedia.media-source:playable("2021 summer camp songs clean/appropriate "), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:playlist:37i9dQZF1DX5BAPG29mHS8"^^org.thingpedia.media-source:playable("Éxitos México"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[error="Invalid playlist Id"];
A: Sorry, there was an unexpected error with your command. Please try again later or report this issue to my developers.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_error;
U: play sigur ros
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("sigur ros")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/0b3f3f45d3591073db1e979fcb5ddb78
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/e79faaa9e11e7d3739644267fedbe959
U: play inbetween days by the cure
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) && id =~ "inbetween days" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) && id =~ "inbetween days")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3EY4O2ZQFIgVU4BSz5rSYx"^^org.thingpedia.media-source:playable("Inbetween Days"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Inbetween Days on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what song is this
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.get_currently_playing();
====
# recording/16f845acb479b4a09f57b94b1a6a9b73
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/6965c0b4bca38b2abdf0221acdcd8fa8
U: play album the head on the door
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.album() filter id =~ "head on the door" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "head on the door")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:album:6HhpmJekzDCRu2K64ZbWqw"^^org.thingpedia.media-source:playable("The Head on the Door"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played The Head on the Door on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "head on the door")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:album:6HhpmJekzDCRu2K64ZbWqw"^^org.thingpedia.media-source:playable("The Head on the Door"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).album() filter id =~ "head on the door")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:album:6HhpmJekzDCRu2K64ZbWqw"^^org.thingpedia.media-source:playable("The Head on the Door"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/d5e5fead6a0fc77b22bc82a0c749d2e8
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/906fc0923855957285bc544b8fbfcf7a
U: play inbetween days
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "inbetween days" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "inbetween days")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3EY4O2ZQFIgVU4BSz5rSYx"^^org.thingpedia.media-source:playable("Inbetween Days"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Inbetween Days on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: stop repeat
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_repeat(repeat=enum off);
====
# recording/55ada0c1ab8684a158480910c0c05a20
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/814752db1994701bb5ca955c8e6c215e
U: play tony's playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playlist() filter id =~ "tony 's playlist" => @org.thingpedia.media-player.play(playable=id);
====
# recording/9590418aeabe0ce1c680f272461a0021
U: play the artist the cure on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
A: I played music by The Cure on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: weather tomorrow
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.weather.forecast();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=0.9mps, humidity=61.1, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-20T14:00:00.000Z"), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West") }
C: ]];
A: It will be sunny tomorrow at 7:00 AM in Lexington Hills, Summit West and the temperature will be 61 F.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: tell me a joke
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @com.icanhazdadjoke.get();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=0.9mps, humidity=61.1, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-20T14:00:00.000Z"), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="5T08U8M79pb"^^com.icanhazdadjoke:id, text="Never take advice from electrons. They are always negative." }
C: ]];
A: Never take advice from electrons. They are always negative.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_display_result;
U: next song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player.player_next();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=0.9mps, humidity=61.1, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-20T14:00:00.000Z"), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="5T08U8M79pb"^^com.icanhazdadjoke:id, text="Never take advice from electrons. They are always negative." }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
A: I played the next song.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: call me tE
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.set_name(name="te");
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:7bu3H8JO7d0UbMoVzbo70s"^^org.thingpedia.media-source:artist("The Cure")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:263aNAQCeFSWipk896byo6"^^org.thingpedia.media-source:playable("Friday I'm in Love"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:76GlO5H5RT6g7y0gev86Nk"^^org.thingpedia.media-source:playable("Just like Heaven"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4dneV7C1yDt9UtyxrQY375"^^org.thingpedia.media-source:playable("Boys Don't Cry - Single Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:0X5C4WjQNubRysTkHOubz3"^^org.thingpedia.media-source:playable("Lovesong - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:7ABE6G4uQxbNtYgVrpBBPA"^^org.thingpedia.media-source:playable("Close to Me - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:1tuwC1Ob5vnYZhvg3zyzJg"^^org.thingpedia.media-source:playable("Pictures of You - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:07CyrZF9eVd02zzIse7tZA"^^org.thingpedia.media-source:playable("In Between Days - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:3O4TPMOgChXOerSdB5WENH"^^org.thingpedia.media-source:playable("1 Forest - 2006 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:4d4oXk7O2lEhZ83ivV93li"^^org.thingpedia.media-source:playable("Lullaby - 2010 Remaster"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="e4a3f879b862b4d8273c96aca085c674b5d060ec", display="tE-MBP", playable="spotify:track:5GHwCpwEos0FzYe55slXEp"^^org.thingpedia.media-source:playable("The Lovecats"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=35];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.weather.forecast(date=$end_of(day), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West"))
C: #[results=[
C:   { temperature=16.1C, wind_speed=0.9mps, humidity=61.1, cloudiness=0.8, fog=0, status=enum sunny, icon="http://api.met.no/weatherapi/weathericon/1.1/?symbol=1;content_type=image/png"^^tt:picture, date=new Date("2021-07-20T14:00:00.000Z"), location=new Location(37.1624585, -121.98538717615781, "Lexington Hills, Summit West") }
C: ]];
C: @com.icanhazdadjoke.get()
C: #[results=[
C:   { id="5T08U8M79pb"^^com.icanhazdadjoke:id, text="Never take advice from electrons. They are always negative." }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next()
C: #[results=[]];
C: @org.thingpedia.builtin.thingengine.builtin.set_name(name="te")
C: #[results=[]];
A: Your request was completed successfully.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: what's my name
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.builtin.thingengine.builtin.get_name();
====
# recording/b73b9e42f19a0c5f7c48b14b7b044473
U: play the band the cure on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/e75185c595ab360beb9bba3cfdaec5e7
U: play thriller
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter id =~ "thriller" => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "thriller")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7azo4rpSUh8nXgtonC6Pkq"^^org.thingpedia.media-source:playable("Thriller"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played Thriller on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: (@org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter id =~ "thriller")[1] => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7azo4rpSUh8nXgtonC6Pkq"^^org.thingpedia.media-source:playable("Thriller"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_play();
====
# recording/4bdfb7126d0dae5cf6f66928dadc6a2c
U: cancel
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# recording/20f7e3cf3220424dfee364b128fc5608
U: play the cure on spotify
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() filter contains(artists, null^^org.thingpedia.media-source:artist("cure")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/e844c2b38bb47b8374268cf84500807d
U: play music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
A: I played music on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play artist travis
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("travis")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^org.thingpedia.media-source:artist("Travis Scott")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5uEYRdEIh9Bo4fpjDd4Na9"^^org.thingpedia.media-source:playable("Goosebumps - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6gBFPUFcJLzWGx4lenP6h2"^^org.thingpedia.media-source:playable("goosebumps"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2xLMifQCjDGFmkHkpNLD9h"^^org.thingpedia.media-source:playable("SICKO MODE"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3eekarcy7kvN4yt5ZFzltW"^^org.thingpedia.media-source:playable("HIGHEST IN THE ROOM"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:11kDth1aKUEUMq9r1pqyds"^^org.thingpedia.media-source:playable("5% TINT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2cYqizR4lgvp4Qu6IQ3qGN"^^org.thingpedia.media-source:playable("BUTTERFLY EFFECT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:51EC3I1nQXpec4gDk0mQyP"^^org.thingpedia.media-source:playable("90210 (feat. Kacy Hill)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:27a1mYSG5tYg7dmEjWBcmL"^^org.thingpedia.media-source:playable("CAN'T SAY"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7wBJfHzpfI3032CSD7CE2m"^^org.thingpedia.media-source:playable("STARGAZING"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1wHZx0LgzFHyeIZkUydNXq"^^org.thingpedia.media-source:playable("Antidote"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
A: I played music by Travis Scott on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: pause
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause();
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^org.thingpedia.media-source:artist("Travis Scott")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5uEYRdEIh9Bo4fpjDd4Na9"^^org.thingpedia.media-source:playable("Goosebumps - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6gBFPUFcJLzWGx4lenP6h2"^^org.thingpedia.media-source:playable("goosebumps"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2xLMifQCjDGFmkHkpNLD9h"^^org.thingpedia.media-source:playable("SICKO MODE"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3eekarcy7kvN4yt5ZFzltW"^^org.thingpedia.media-source:playable("HIGHEST IN THE ROOM"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:11kDth1aKUEUMq9r1pqyds"^^org.thingpedia.media-source:playable("5% TINT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2cYqizR4lgvp4Qu6IQ3qGN"^^org.thingpedia.media-source:playable("BUTTERFLY EFFECT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:51EC3I1nQXpec4gDk0mQyP"^^org.thingpedia.media-source:playable("90210 (feat. Kacy Hill)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:27a1mYSG5tYg7dmEjWBcmL"^^org.thingpedia.media-source:playable("CAN'T SAY"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7wBJfHzpfI3032CSD7CE2m"^^org.thingpedia.media-source:playable("STARGAZING"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1wHZx0LgzFHyeIZkUydNXq"^^org.thingpedia.media-source:playable("Antidote"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[]];
A: I paused playback.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play ravel
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("ravel")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^org.thingpedia.media-source:artist("Travis Scott")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5uEYRdEIh9Bo4fpjDd4Na9"^^org.thingpedia.media-source:playable("Goosebumps - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6gBFPUFcJLzWGx4lenP6h2"^^org.thingpedia.media-source:playable("goosebumps"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2xLMifQCjDGFmkHkpNLD9h"^^org.thingpedia.media-source:playable("SICKO MODE"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3eekarcy7kvN4yt5ZFzltW"^^org.thingpedia.media-source:playable("HIGHEST IN THE ROOM"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:11kDth1aKUEUMq9r1pqyds"^^org.thingpedia.media-source:playable("5% TINT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2cYqizR4lgvp4Qu6IQ3qGN"^^org.thingpedia.media-source:playable("BUTTERFLY EFFECT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:51EC3I1nQXpec4gDk0mQyP"^^org.thingpedia.media-source:playable("90210 (feat. Kacy Hill)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:27a1mYSG5tYg7dmEjWBcmL"^^org.thingpedia.media-source:playable("CAN'T SAY"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7wBJfHzpfI3032CSD7CE2m"^^org.thingpedia.media-source:playable("STARGAZING"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1wHZx0LgzFHyeIZkUydNXq"^^org.thingpedia.media-source:playable("Antidote"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0CVjzaBJZ4csWIL0kPmzM6"^^org.thingpedia.media-source:artist("Ravell")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rIk9RbrH9y4CDYfMeoie1"^^org.thingpedia.media-source:playable("Rockin'"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0o9L9lfy4hECoa2Y7FcpzS"^^org.thingpedia.media-source:playable("That Body - Dub Mix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6c4PgdnY1vZfds7leBo0Zr"^^org.thingpedia.media-source:playable("Feelin' You"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:04Uu103kfQSwmwuzCQoyeZ"^^org.thingpedia.media-source:playable("Sunrise Riot"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6uoGK87Mo8vBkpDPevEJJX"^^org.thingpedia.media-source:playable("Before I Go"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7cQbQPtzPeDkcP3W6hfHgD"^^org.thingpedia.media-source:playable("Get Away"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3y2Ac9C28723pnZq4E53Dg"^^org.thingpedia.media-source:playable("Do It Now"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
A: I played music by Ravell on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: play maurice ravel
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, null^^org.thingpedia.media-source:artist("maurice ravel")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ZtFanR9U6ndgddUvNcjcG"^^org.thingpedia.media-source:playable("good 4 u"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0UsmyJDsst2xhX1ZiFF3JW"^^org.thingpedia.media-source:playable("Year,2015"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7BFk1nSfwfkDOgnNNeY7Yn"^^org.thingpedia.media-source:playable("wish i dropped out like brakence interlude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5BJs3aDrKYBRkzrhaVxf89"^^org.thingpedia.media-source:playable("After Me - 2021 Version"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:748mdHapucXQri7IAO8yFK"^^org.thingpedia.media-source:playable("Kiss Me More (feat. SZA)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rJw9VsPNdfnV9Ar97xZG2"^^org.thingpedia.media-source:playable("K-LOVE Fan Awards: Songs of the Year (2015 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1lrjBRhWKrd3YShBN4Un7c"^^org.thingpedia.media-source:playable("Bob Dylan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0u7vHkZJtxjSP65kf0yZOA"^^org.thingpedia.media-source:playable("Rubish"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5CZ40GBx1sQ9agT82CLQCT"^^org.thingpedia.media-source:playable("traitor"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:00ohIpPn9LkKpeIqhfIU9V"^^org.thingpedia.media-source:playable("K-Love Fan Awards: Songs of the Year (2014 Mash-Up)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=50];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0Y5tJX1MQlPlqiwlOH1tJY"^^org.thingpedia.media-source:artist("Travis Scott")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5uEYRdEIh9Bo4fpjDd4Na9"^^org.thingpedia.media-source:playable("Goosebumps - Remix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6gBFPUFcJLzWGx4lenP6h2"^^org.thingpedia.media-source:playable("goosebumps"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2xLMifQCjDGFmkHkpNLD9h"^^org.thingpedia.media-source:playable("SICKO MODE"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3eekarcy7kvN4yt5ZFzltW"^^org.thingpedia.media-source:playable("HIGHEST IN THE ROOM"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:11kDth1aKUEUMq9r1pqyds"^^org.thingpedia.media-source:playable("5% TINT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2cYqizR4lgvp4Qu6IQ3qGN"^^org.thingpedia.media-source:playable("BUTTERFLY EFFECT"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:51EC3I1nQXpec4gDk0mQyP"^^org.thingpedia.media-source:playable("90210 (feat. Kacy Hill)"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:27a1mYSG5tYg7dmEjWBcmL"^^org.thingpedia.media-source:playable("CAN'T SAY"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7wBJfHzpfI3032CSD7CE2m"^^org.thingpedia.media-source:playable("STARGAZING"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1wHZx0LgzFHyeIZkUydNXq"^^org.thingpedia.media-source:playable("Antidote"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=46];
C: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_pause()
C: #[results=[]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:0CVjzaBJZ4csWIL0kPmzM6"^^org.thingpedia.media-source:artist("Ravell")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5rIk9RbrH9y4CDYfMeoie1"^^org.thingpedia.media-source:playable("Rockin'"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0o9L9lfy4hECoa2Y7FcpzS"^^org.thingpedia.media-source:playable("That Body - Dub Mix"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6c4PgdnY1vZfds7leBo0Zr"^^org.thingpedia.media-source:playable("Feelin' You"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:04Uu103kfQSwmwuzCQoyeZ"^^org.thingpedia.media-source:playable("Sunrise Riot"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6uoGK87Mo8vBkpDPevEJJX"^^org.thingpedia.media-source:playable("Before I Go"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:7cQbQPtzPeDkcP3W6hfHgD"^^org.thingpedia.media-source:playable("Get Away"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3y2Ac9C28723pnZq4E53Dg"^^org.thingpedia.media-source:playable("Do It Now"), __device="XXXXXXXX"^^tt:device_id }
C: ]];
C: @org.thingpedia.media-source(id="com.spotify-XXXXXXXX"^^tt:device_id).playable() filter contains(artists, "spotify:artist:17hR0sYHpx7VYTMRfFUOmY"^^org.thingpedia.media-source:artist("Maurice Ravel")) => @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).play(playable=id)
C: #[results=[
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3MRQn2RYo2VLYMoStnLRxu"^^org.thingpedia.media-source:playable("Ravel: Pavane pour une infante défunte, M. 19"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4JOEMgLkrHp8K1XNmyNffH"^^org.thingpedia.media-source:playable("Miroirs: III. Une barque sur l'océan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1NJQ86EXe3Gmo2aGKtrMua"^^org.thingpedia.media-source:playable("Jeux d'eau M.30"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:3M7dYsUVdr66ztv5yXqOFm"^^org.thingpedia.media-source:playable("Ma mère l'oye, M. 60 (Version for Piano Duo): I. Pavane de la belle au bois dormant"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:5lHKK347dnVNkTDGfQ81Ub"^^org.thingpedia.media-source:playable("Miroirs, M.43 - Orch. Ravel: Alborada del gracioso, M.43"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:4ju98rvX917EwXLKLnRbQ2"^^org.thingpedia.media-source:playable("Piano Concerto in G Major, M. 83: II. Adagio assai"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:0eoHzI456z8FK5o0g7pdGn"^^org.thingpedia.media-source:playable("Ravel: Miroirs, M. 43: III. Une barque sur l'océan"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:6TX34flBqlMMSWihUADO2a"^^org.thingpedia.media-source:playable("Le Tombeau de Couperin, M.68: 1. Prélude"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:1QMmdTk4tgSZ7K4L2E1oa4"^^org.thingpedia.media-source:playable("Valses nobles et sentimentales, M.61 - for Orchestra: 3. Modéré; 4. Assez animé"), __device="XXXXXXXX"^^tt:device_id },
C:   { value="2faa93e1b2b45b85b02b90b497d311c37e7659e7", display="Soundworks’s Mac Pro", playable="spotify:track:2DmlTLFphBLAIACKPsLAQH"^^org.thingpedia.media-source:playable("Pavane pour une infante défunte, M. 19 (Version for Orchestra)"), __device="XXXXXXXX"^^tt:device_id }
C: ]]
C: #[count=39];
A: I played music by Maurice Ravel on Spotify.
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: next
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-player(id="com.spotify-XXXXXXXX"^^tt:device_id).player_next();
====
# recording/9d5c065ebbfd82d329a8935ae657178c
U: play some music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.playable() => @org.thingpedia.media-player.play(playable=id);
====
# recording/73bdacce3b3128a9206415fbf37b690a
U: Play a song by the Beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() filter contains(artists, null^^org.thingpedia.media-source:artist("beatles")) => @org.thingpedia.media-player.play(playable=id);
====
# recording/5eaf228643d600cab36463277346df00
U: play a song by the Beatles
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.media-source.song() filter contains(artists, null^^org.thingpedia.media-source:artist("beatles")) => @org.thingpedia.media-player.play(playable=id);
