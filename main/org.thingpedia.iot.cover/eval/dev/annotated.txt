====
# online/55016196
U: open the blinds
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.set_openclose(state=enum(open));
====
# online/55016202
U: are the windows closed?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55016203
U: close the window
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.set_openclose(state=enum(close));
====
# online/55592255
U: is my curtain open?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592256
U: are the curtains closed?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592258
U: is the curtain open?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592261
U: are my curtains close?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592264
U: check if my curtains are raised
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592268
U: is the curtain put down?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592269
U: are the curtains put down?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592270
U: did i raise the curtains?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592283
U: is the awning open?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592284
U: is the awning opened?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592286
U: did i retract the awning?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592288
U: check whether the awning is retracted
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592289
U: check whether the awning is extended
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592290
U: check whether the awning is open
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592292
U: are my blinds closed?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592296
U: is the blind open?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592297
U: are the blinds open?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592303
U: did i raise my blinds?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592305
U: check whether my blinds are lowered?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592309
U: is my damper closed?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592314
U: are the shades raised?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592315
U: did i open my curtains?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592530
U: raise my blinds
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.set_openclose(state=enum(open));
====
# online/55592531
U: raise my shutters
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.set_openclose(state=enum(open));
====
# online/55592533
U: lower my shades
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.set_openclose(state=enum(close));
====
# online/55016195
U: open the window
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.set_openclose(state=enum(open));
====
# online/55016201
U: is the window open?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592260
U: are my curtains opened?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592263
U: is the curtain close?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592272
U: did i raise the curtain?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592274
U: check whether my curtains are lowered
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592275
U: check whether my curtain is lowered
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592276
U: check whether the curtain is lowered
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592278
U: is my awning extended?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592279
U: is my awning closed?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592280
U: is my awning retracted?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592285
U: are the awnings in?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592287
U: did i retract my awning?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592291
U: check whether the awning is closed
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592298
U: are the blinds closed?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592299
U: check if my blind is raised
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592300
U: check if the blind is raised
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592304
U: check whether the blinds are lowered?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592306
U: is my damper opened?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592310
U: is the damper closed?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/55592312
U: are the shades open?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# online/62745191
U: should i put sunscreen on?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @org.thingpedia.iot.cover.state() => notify;
====
# log/81886
U: close curtain
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum close);
====
# log/74182
U: open gate
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# log/64911
U: is my curtain open
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.state();
====
# log/106090
U: are blinds open
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.state();
====
# log/57455
U: open the garage
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# log-dev/6895
U: open the door.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# log/158172
U: open cover volet vaness
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(name="volet vaness").set_openclose(state=enum open);
====
# log/158169
U: close all cover
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(all=true).set_openclose(state=enum close);
====
# log/158168
U: open covers
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# log/158167
U: open curtains
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/55592665
U: tell me when my curtain lowers
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter state == enum closed;
====
# online/55592668
U: notify me when my curtains are closed
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter state == enum closed;
====
# online/57061579
U: open the blinds at 0:0
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: attimer(time=[new Time(0, 0)]) => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/57061580
U: open the shades at 0:0
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: attimer(time=[new Time(0, 0)]) => @org.thingpedia.iot.cover.set_openclose(state=enum open);
====
# online/57061582
U: alert me when somebody opens the window
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter state == enum opened;
====
# online/57061591
U: send an alert when somebody opens the window
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover.state()) filter state == enum opened;
====
# log-dev/9389
U: change cover state.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose();
====
# manual/8
U: there is any cover open ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(all=true).state();
====
# manual/9
U: close all shutters
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(all=true).set_openclose(state=enum close);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.iot.cover(all=true).set_openclose(state=enum close);
A: Ok, do you want me to open or close cover with state close?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_confirm_action;
AT: @org.thingpedia.iot.cover(all=true).set_openclose(state=enum close);
U: yes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(all=true).set_openclose(state=enum close)
UT: #[confirm=enum confirmed];
====
# manual/10
U: check if my terrace awning is extended
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(name="terrace").state();
====
# manual/11
U: check if my terrace awning is extended
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(name="terrace").state();
====
# manual/12
U: warn me when the bedroom blinds are raised or lowered
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover(name="bedroom").state());
====
# manual/13
U: when the backyard window is open send me an alert
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover(name="backyard").state());
====
# manual/14
U: when the backyard window is opened send me an alert
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: monitor(@org.thingpedia.iot.cover(name="backyard").state());
====
# manual/15
U: pull up the cover
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum open);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.iot.cover(id="str:ENTITY_tt:device_id::1:"^^tt:device_id("Simulated Device org.thingpedia.iot.cover 1")).set_openclose(state=enum open);
A: Ok, do you want me to keep your Simulated Device org.thingpedia.iot.cover 1 curtains?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_confirm_action;
AT: @org.thingpedia.iot.cover(id="str:ENTITY_tt:device_id::1:"^^tt:device_id("Simulated Device org.thingpedia.iot.cover 1")).set_openclose(state=enum open);
U: yes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(id="str:ENTITY_tt:device_id::1:"^^tt:device_id("Simulated Device org.thingpedia.iot.cover 1")).set_openclose(state=enum open)
UT: #[confirm=enum confirmed];
====
# manual/16
U: close the awnings
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum close);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.iot.cover(id="str:ENTITY_tt:device_id::0:"^^tt:device_id("Simulated Device org.thingpedia.iot.cover 0")).set_openclose(state=enum close);
A: Ok, do you want me to pull the Simulated Device org.thingpedia.iot.cover 0 curtains close?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_confirm_action;
AT: @org.thingpedia.iot.cover(id="str:ENTITY_tt:device_id::0:"^^tt:device_id("Simulated Device org.thingpedia.iot.cover 0")).set_openclose(state=enum close);
U: yes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(id="str:ENTITY_tt:device_id::0:"^^tt:device_id("Simulated Device org.thingpedia.iot.cover 0")).set_openclose(state=enum close)
UT: #[confirm=enum confirmed];
====
# manual/17
U: is the verandah sunshade open?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(name="verandah sunshade").state();
====
# manual/18
U: close the curtain
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.set_openclose(state=enum close);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: @org.thingpedia.iot.cover(id="str:ENTITY_tt:device_id::1:"^^tt:device_id("Simulated Device org.thingpedia.iot.cover 1")).set_openclose(state=enum close);
A: Ok, do you want me to pull the Simulated Device org.thingpedia.iot.cover 1 curtains close?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_confirm_action;
AT: @org.thingpedia.iot.cover(id="str:ENTITY_tt:device_id::1:"^^tt:device_id("Simulated Device org.thingpedia.iot.cover 1")).set_openclose(state=enum close);
U: yes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(id="str:ENTITY_tt:device_id::1:"^^tt:device_id("Simulated Device org.thingpedia.iot.cover 1")).set_openclose(state=enum close)
UT: #[confirm=enum confirmed];
====
# manual/19
U: which is the status of my house garage door opener?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(name="garage door opener").state();
====
# manual/20
U: did someone opened the bedroom shutters ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(name="bedroom").state();
====
# manual/21
U: did someone opened the bedroom shutters ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(name="bedroom").state();
====
# manual/22
U: are the shades opening or closing?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.state();
====
# manual/23
U: the cover is open or closed?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.state();
====
# mturk/0
U: Are all the window covers closed?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(all=true).state();
====
# mturk/28
U: Is the garage door open?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover(name="garage").state();
====
# mturk/46
U: Close the window completely at 8 PM tonight.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: ontimer(date=[set_time($now, new Time(20, 0))]) => @org.thingpedia.iot.cover(name="window").set_openclose(state=enum close);
====
# mturk/48
U: Is the door locked?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: @org.thingpedia.iot.cover.state();