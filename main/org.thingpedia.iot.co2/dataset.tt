dataset @org.thingpedia.iot.co2 language "en" {
    program := @org.thingpedia.iot.co2.state() 
    #_[utterances=["is there any carbon dioxide?",
                   "check if there is any carbon dioxide",
                   "check whether CO2 is detected",
                   "is there any carbon dioxide?",
                   "check if the sensor is detecting any carbon dioxide",
                   "do you smell CO2?",
                   "is there a CO2 leak?",
                   "is there carbon dioxide?",
                   "there is presence of carbon dioxide?",
                   "is there any dioxide in the air?"]]
    #[id=54304068]
    #[name="StateThenNotify"];

    query := @org.thingpedia.iot.co2.state()
    #_[utterances=["if the sensor is detecting any CO2",
                   "whether the sensor is detecting carbon dioxide",
                   "if the CO2 detector is catching any carbon dioxide",
                   "if the carbon dioxide sensor is detecting something",
                   "whether the carbon dioxide sensor is detecting anything",
                   "whether there is any CO2",
                   "whether there is dioxide"]]
    #[id=54304077]
    #[name="State"];

    stream := monitor (@org.thingpedia.iot.co2.state())
    #_[utterances=["when the carbon dioxide detector starts or stops detecting any dioxide",
                   "when the CO2 detector starts or stops detecting carbon dioxide",
                   "when the carbon dioxide detector starts or stops detecting any CO2",
                   "when the quality of the air is affected by presence of any carbon dioxide",
                   "when my sensor starts detecting carbon dioxide",
                   "when my detector is detecting CO2",
                   "the moment my sensor detects carbon dioxide"]]
    #[id=54304085]
    #[name="MonitorState"];

    stream (p_state :Enum(detected,not_detected)) := monitor (@org.thingpedia.iot.co2.state()), (co2_state == p_state)
    #_[utterances=["when CO2 is ${p_state}",
                   "when carbon dioxide is ${p_state}",
                   "as soon as CO2 is ${p_state}",
                   "when carbon dioxide is ${p_state} in the air"]]
    #[id=5430049116]
    #[name="MonitorStateByStateCO2"];

    stream := monitor (@org.thingpedia.iot.co2.state()), co2_state == enum(detected)
    #_[utterances=["when CO2 is detected",
                   "when there is carbon dioxide",
                   "when you smell CO2",
                   "when carbon dioxide appears",
                   "when there is carbon dioxide in the air"]]
    #[id=5430049116]
    #[name="MonitordetectedCO2"];

    stream := monitor (@org.thingpedia.iot.co2.state()), co2_state == enum(not_detected)
    #_[utterances=["when no carbon dioxide is detected",
                   "when CO2 is not detected anymore",
                   "when there is no CO2",
                   "when carbon dioxide clears",
                   "when the carbon dioxide goes away",
                   "when the CO2 is gone",
                   "when there is no more carbon dioxide"]]
    #[id=543040101]
    #[name="Monitornot_detectedNothing"];

    program (p_name : String) := @org.thingpedia.iot.co2(name=p_name).state() 
    #_[utterances=["check the ${p_name:const} carbon dioxide sensor reading",
                   "check whether ${p_name:const} CO2 sensor detects",
                   "check if the ${p_name:const} sensor is detecting any carbon dioxide",
                   "the ${p_name:const} smells CO2?"]]
    #[id=54304168]
    #[name="StateThenNotifyName"];

    query (p_name : String) := @org.thingpedia.iot.co2(name=p_name).state()
    #_[utterances=["if the ${p_name:const} sensor is detecting any CO2",
                   "whether the ${p_name:const} sensor is detecting carbon dioxide",
                   "if the ${p_name:const} CO2 detector is catching any carbon dioxide",
                   "if the ${p_name:const} carbon dioxide sensor is detecting something",
                   "whether the ${p_name:const} carbon dioxide sensor is detecting anything"]]
    #[id=54304277]
    #[name="StateName"];

    stream (p_name : String) := monitor (@org.thingpedia.iot.co2(name=p_name).state())
    #_[utterances=["when the ${p_name:const} carbon dioxide detector starts or stops detecting any dioxide",
                   "when the ${p_name:const} CO2 detector starts or stops detecting carbon dioxide",
                   "when the ${p_name:const} carbon dioxide detector starts or stops detecting any CO2",
                   "when my ${p_name:const} sensor starts detecting carbon dioxide",
                   "when my ${p_name:const} detector is detecting CO2",
                   "the moment my ${p_name:const} sensor detects carbon dioxide"]]
    #[id=54304385]
    #[name="MonitorStateName"];

    stream (p_name : String, p_state :Enum(detected,not_detected)) := monitor (@org.thingpedia.iot.co2(name=p_name).state()), (co2_state == p_state)
    #_[utterances=["when ${p_name:const} sensor says CO2 is ${p_state}",
                   "when ${p_name:const} detector read that carbon dioxide is ${p_state}",
                   "as soon as ${p_name:const} sensor says CO2 is ${p_state}"]]
    #[id=5430044116]
    #[name="MonitorStateByStateCO2Name"];

    stream (p_name : String) := monitor (@org.thingpedia.iot.co2.state()), co2_state == enum(detected)
    #_[utterances=["when CO2 is detected by ${p_name:const}",
                   "when the ${p_name:const} sensor says that there is carbon dioxide",
                   "when ${p_name:const} sensor smell CO2",
                   "when carbon dioxide appears on ${p_name:const} sensor",
                   "when there is carbon dioxide in the air detected by ${p_name:const} CO2 sensor"]]
    #[id=5430045116]
    #[name="MonitordetectedCO2Name"];

    stream (p_name : String) := monitor (@org.thingpedia.iot.co2.state()), co2_state == enum(not_detected)
    #_[utterances=["when no carbon dioxide is detected by ${p_name:const}",
                   "when CO2 is not detected anymore by ${p_name:const}",
                   "when there is no CO2 detected by ${p_name:const}",
                   "when ${p_name:const} says that carbon dioxide clears",
                   "when there is no more carbon dioxide in the air detected by ${p_name:const} CO2 sensor"]]
    #[id=543046101]
    #[name="Monitornot_detectedNothingName"];
}